// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: rpc_common/v1/sensitive_word.proto

package v1

import (
	paginator "fkratos/api/paginator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SensitiveWordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`               //ID
	Word      string   `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`           //敏感词
	Labs      []string `protobuf:"bytes,3,rep,name=labs,proto3" json:"labs,omitempty"`           //标签
	Desc      string   `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`           //描述
	CreatedAt string   `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //创建时间
	UpdatedAt string   `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //更新时间
}

func (x *SensitiveWordInfo) Reset() {
	*x = SensitiveWordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordInfo) ProtoMessage() {}

func (x *SensitiveWordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordInfo.ProtoReflect.Descriptor instead.
func (*SensitiveWordInfo) Descriptor() ([]byte, []int) {
	return file_rpc_common_v1_sensitive_word_proto_rawDescGZIP(), []int{0}
}

func (x *SensitiveWordInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SensitiveWordInfo) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *SensitiveWordInfo) GetLabs() []string {
	if x != nil {
		return x.Labs
	}
	return nil
}

func (x *SensitiveWordInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SensitiveWordInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SensitiveWordInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 请求-敏感词-列表
type SensitiveWordListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paginator *paginator.PaginatorReq `protobuf:"bytes,1,opt,name=paginator,proto3" json:"paginator,omitempty"` //分页
}

func (x *SensitiveWordListReq) Reset() {
	*x = SensitiveWordListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordListReq) ProtoMessage() {}

func (x *SensitiveWordListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordListReq.ProtoReflect.Descriptor instead.
func (*SensitiveWordListReq) Descriptor() ([]byte, []int) {
	return file_rpc_common_v1_sensitive_word_proto_rawDescGZIP(), []int{1}
}

func (x *SensitiveWordListReq) GetPaginator() *paginator.PaginatorReq {
	if x != nil {
		return x.Paginator
	}
	return nil
}

// 响应-敏感词-列表
type SensitiveWordListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List      []*SensitiveWordInfo      `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`           //敏感词列表
	Paginator *paginator.PaginatorReply `protobuf:"bytes,2,opt,name=paginator,proto3" json:"paginator,omitempty"` //分页
}

func (x *SensitiveWordListReply) Reset() {
	*x = SensitiveWordListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordListReply) ProtoMessage() {}

func (x *SensitiveWordListReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordListReply.ProtoReflect.Descriptor instead.
func (*SensitiveWordListReply) Descriptor() ([]byte, []int) {
	return file_rpc_common_v1_sensitive_word_proto_rawDescGZIP(), []int{2}
}

func (x *SensitiveWordListReply) GetList() []*SensitiveWordInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SensitiveWordListReply) GetPaginator() *paginator.PaginatorReply {
	if x != nil {
		return x.Paginator
	}
	return nil
}

// 请求-敏感词-保存
type SensitiveWordStoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     //ID
	Word string   `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"` //敏感词
	Labs []string `protobuf:"bytes,3,rep,name=labs,proto3" json:"labs,omitempty"` //标签
	Desc string   `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"` //描述
}

func (x *SensitiveWordStoreReq) Reset() {
	*x = SensitiveWordStoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordStoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordStoreReq) ProtoMessage() {}

func (x *SensitiveWordStoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordStoreReq.ProtoReflect.Descriptor instead.
func (*SensitiveWordStoreReq) Descriptor() ([]byte, []int) {
	return file_rpc_common_v1_sensitive_word_proto_rawDescGZIP(), []int{3}
}

func (x *SensitiveWordStoreReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SensitiveWordStoreReq) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *SensitiveWordStoreReq) GetLabs() []string {
	if x != nil {
		return x.Labs
	}
	return nil
}

func (x *SensitiveWordStoreReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 响应-敏感词-保存
type SensitiveWordStoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SensitiveWordStoreReply) Reset() {
	*x = SensitiveWordStoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordStoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordStoreReply) ProtoMessage() {}

func (x *SensitiveWordStoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordStoreReply.ProtoReflect.Descriptor instead.
func (*SensitiveWordStoreReply) Descriptor() ([]byte, []int) {
	return file_rpc_common_v1_sensitive_word_proto_rawDescGZIP(), []int{4}
}

// 请求-敏感词-删除
type SensitiveWordDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"` //ID集合
}

func (x *SensitiveWordDelReq) Reset() {
	*x = SensitiveWordDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordDelReq) ProtoMessage() {}

func (x *SensitiveWordDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordDelReq.ProtoReflect.Descriptor instead.
func (*SensitiveWordDelReq) Descriptor() ([]byte, []int) {
	return file_rpc_common_v1_sensitive_word_proto_rawDescGZIP(), []int{5}
}

func (x *SensitiveWordDelReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 响应-敏感词-删除
type SensitiveWordDelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SensitiveWordDelReply) Reset() {
	*x = SensitiveWordDelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordDelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordDelReply) ProtoMessage() {}

func (x *SensitiveWordDelReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordDelReply.ProtoReflect.Descriptor instead.
func (*SensitiveWordDelReply) Descriptor() ([]byte, []int) {
	return file_rpc_common_v1_sensitive_word_proto_rawDescGZIP(), []int{6}
}

// 请求-敏感词-检测
type SensitiveWordCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word string `protobuf:"bytes,1,opt,name=Word,proto3" json:"Word,omitempty"` //词语
}

func (x *SensitiveWordCheckReq) Reset() {
	*x = SensitiveWordCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordCheckReq) ProtoMessage() {}

func (x *SensitiveWordCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordCheckReq.ProtoReflect.Descriptor instead.
func (*SensitiveWordCheckReq) Descriptor() ([]byte, []int) {
	return file_rpc_common_v1_sensitive_word_proto_rawDescGZIP(), []int{7}
}

func (x *SensitiveWordCheckReq) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

// 响应-敏感词-检测
type SensitiveWordCheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  bool   `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`  //是否有敏感词
	Replace string `protobuf:"bytes,2,opt,name=Replace,proto3" json:"Replace,omitempty"` //替换后词语
	Filter  string `protobuf:"bytes,3,opt,name=Filter,proto3" json:"Filter,omitempty"`   //过滤后词语
}

func (x *SensitiveWordCheckResp) Reset() {
	*x = SensitiveWordCheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordCheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordCheckResp) ProtoMessage() {}

func (x *SensitiveWordCheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_common_v1_sensitive_word_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordCheckResp.ProtoReflect.Descriptor instead.
func (*SensitiveWordCheckResp) Descriptor() ([]byte, []int) {
	return file_rpc_common_v1_sensitive_word_proto_rawDescGZIP(), []int{8}
}

func (x *SensitiveWordCheckResp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *SensitiveWordCheckResp) GetReplace() string {
	if x != nil {
		return x.Replace
	}
	return ""
}

func (x *SensitiveWordCheckResp) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

var File_rpc_common_v1_sensitive_word_proto protoreflect.FileDescriptor

var file_rpc_common_v1_sensitive_word_proto_rawDesc = []byte{
	0x0a, 0x22, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x61, 0x62, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x62, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x51, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x52, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x22, 0x8f, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x09, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x63, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x62, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x61, 0x62, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x17,
	0x0a, 0x15, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x44,
	0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x57, 0x6f, 0x72, 0x64, 0x22, 0x62, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x32, 0xb5, 0x03, 0x0a, 0x0d, 0x53, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x67, 0x0a, 0x11, 0x53, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x57, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x64, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64,
	0x44, 0x65, 0x6c, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x6c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x69, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x1e, 0x5a, 0x1c, 0x66, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_common_v1_sensitive_word_proto_rawDescOnce sync.Once
	file_rpc_common_v1_sensitive_word_proto_rawDescData = file_rpc_common_v1_sensitive_word_proto_rawDesc
)

func file_rpc_common_v1_sensitive_word_proto_rawDescGZIP() []byte {
	file_rpc_common_v1_sensitive_word_proto_rawDescOnce.Do(func() {
		file_rpc_common_v1_sensitive_word_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_common_v1_sensitive_word_proto_rawDescData)
	})
	return file_rpc_common_v1_sensitive_word_proto_rawDescData
}

var file_rpc_common_v1_sensitive_word_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_rpc_common_v1_sensitive_word_proto_goTypes = []interface{}{
	(*SensitiveWordInfo)(nil),        // 0: api.rpc_common.v1.SensitiveWordInfo
	(*SensitiveWordListReq)(nil),     // 1: api.rpc_common.v1.SensitiveWordListReq
	(*SensitiveWordListReply)(nil),   // 2: api.rpc_common.v1.SensitiveWordListReply
	(*SensitiveWordStoreReq)(nil),    // 3: api.rpc_common.v1.SensitiveWordStoreReq
	(*SensitiveWordStoreReply)(nil),  // 4: api.rpc_common.v1.SensitiveWordStoreReply
	(*SensitiveWordDelReq)(nil),      // 5: api.rpc_common.v1.SensitiveWordDelReq
	(*SensitiveWordDelReply)(nil),    // 6: api.rpc_common.v1.SensitiveWordDelReply
	(*SensitiveWordCheckReq)(nil),    // 7: api.rpc_common.v1.SensitiveWordCheckReq
	(*SensitiveWordCheckResp)(nil),   // 8: api.rpc_common.v1.SensitiveWordCheckResp
	(*paginator.PaginatorReq)(nil),   // 9: api.paginator.PaginatorReq
	(*paginator.PaginatorReply)(nil), // 10: api.paginator.PaginatorReply
}
var file_rpc_common_v1_sensitive_word_proto_depIdxs = []int32{
	9,  // 0: api.rpc_common.v1.SensitiveWordListReq.paginator:type_name -> api.paginator.PaginatorReq
	0,  // 1: api.rpc_common.v1.SensitiveWordListReply.list:type_name -> api.rpc_common.v1.SensitiveWordInfo
	10, // 2: api.rpc_common.v1.SensitiveWordListReply.paginator:type_name -> api.paginator.PaginatorReply
	1,  // 3: api.rpc_common.v1.SensitiveWord.SensitiveWordList:input_type -> api.rpc_common.v1.SensitiveWordListReq
	3,  // 4: api.rpc_common.v1.SensitiveWord.SensitiveWordStore:input_type -> api.rpc_common.v1.SensitiveWordStoreReq
	5,  // 5: api.rpc_common.v1.SensitiveWord.SensitiveWordDel:input_type -> api.rpc_common.v1.SensitiveWordDelReq
	7,  // 6: api.rpc_common.v1.SensitiveWord.SensitiveWordCheck:input_type -> api.rpc_common.v1.SensitiveWordCheckReq
	2,  // 7: api.rpc_common.v1.SensitiveWord.SensitiveWordList:output_type -> api.rpc_common.v1.SensitiveWordListReply
	4,  // 8: api.rpc_common.v1.SensitiveWord.SensitiveWordStore:output_type -> api.rpc_common.v1.SensitiveWordStoreReply
	6,  // 9: api.rpc_common.v1.SensitiveWord.SensitiveWordDel:output_type -> api.rpc_common.v1.SensitiveWordDelReply
	8,  // 10: api.rpc_common.v1.SensitiveWord.SensitiveWordCheck:output_type -> api.rpc_common.v1.SensitiveWordCheckResp
	7,  // [7:11] is the sub-list for method output_type
	3,  // [3:7] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_rpc_common_v1_sensitive_word_proto_init() }
func file_rpc_common_v1_sensitive_word_proto_init() {
	if File_rpc_common_v1_sensitive_word_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_common_v1_sensitive_word_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_common_v1_sensitive_word_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_common_v1_sensitive_word_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_common_v1_sensitive_word_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordStoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_common_v1_sensitive_word_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordStoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_common_v1_sensitive_word_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_common_v1_sensitive_word_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordDelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_common_v1_sensitive_word_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_common_v1_sensitive_word_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordCheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_common_v1_sensitive_word_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_common_v1_sensitive_word_proto_goTypes,
		DependencyIndexes: file_rpc_common_v1_sensitive_word_proto_depIdxs,
		MessageInfos:      file_rpc_common_v1_sensitive_word_proto_msgTypes,
	}.Build()
	File_rpc_common_v1_sensitive_word_proto = out.File
	file_rpc_common_v1_sensitive_word_proto_rawDesc = nil
	file_rpc_common_v1_sensitive_word_proto_goTypes = nil
	file_rpc_common_v1_sensitive_word_proto_depIdxs = nil
}
