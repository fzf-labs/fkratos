syntax = "proto3";

package api.rpc_user.v1;

import "paginator/paginator.proto";

option go_package = "fkratos/api/rpc_user/v1;v1";

// 变量的命名一律使用小驼峰命名法，例如：firstName、lastName等。
// 后缀定义:请求req,响应reply

// 用户服务
service User {
  //用户-列表
  rpc UserList(UserListReq) returns (UserListReply);
  //用户-信息
  rpc UserInfo(UserInfoReq) returns (UserInfoReply);
  //用户-保存
  rpc UserStore(UserStoreReq) returns (UserStoreReply);
  //用户-删除
  rpc UserDel(UserDelReq) returns (UserDelReply);
}

message UserInfo {
  string ID = 1; // Id
  int64 UID = 2; // uid
  string Username = 3; // 用户名
  string Phone = 4; // 手机
  string Email = 5; // 邮箱
  string Nickname = 6; // 昵称
  int32 Sex = 7; // 性别（0未知 1男 2女）
  string Avatar = 8; // 头像
  string Profile = 9; // 简介
  string Other = 10; // 其他
  int32 Status = 11; // 状态
  string CreatedAt = 12; // 创建时间
  string UpdatedAt = 13; // 更新时间
}

message UserListReq {
  paginator.PaginatorReq paginator = 1; //分页
}
message UserListReply {
  paginator.PaginatorReply paginator = 1; //分页
  repeated UserInfo list = 2; //列表
}

message UserInfoReq {
  int64 UID = 2; // uid
}
message UserInfoReply {
  UserInfo info = 1; //用户信息
}

message UserStoreReq {
  string ID = 1; // Id
  string Username = 2; // 用户名
  string Phone = 3; // 手机
  string Email = 4; // 邮箱
  string Password = 5; // 密码
  string Nickname = 6; // 昵称
  int32 Sex = 7; // 性别（0未知 1男 2女）
  string Avatar = 8; // 头像
  string Profile = 9; // 简介
  int32 Status = 10; // 状态
}
message UserStoreReply {
  string ID = 1; // Id
}

message UserDelReq {
  repeated string ids = 1; //ID集合
}
message UserDelReply {}
