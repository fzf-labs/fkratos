// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: bff_admin/v1/sys.proto

package v1

import (
	paginator "fkratos/api/paginator"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 请求-一言
type DashboardSpeechReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DashboardSpeechReq) Reset() {
	*x = DashboardSpeechReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardSpeechReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardSpeechReq) ProtoMessage() {}

func (x *DashboardSpeechReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardSpeechReq.ProtoReflect.Descriptor instead.
func (*DashboardSpeechReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{0}
}

// 响应-一言
type DashboardSpeechReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word string `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"` //一言
}

func (x *DashboardSpeechReply) Reset() {
	*x = DashboardSpeechReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardSpeechReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardSpeechReply) ProtoMessage() {}

func (x *DashboardSpeechReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardSpeechReply.ProtoReflect.Descriptor instead.
func (*DashboardSpeechReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{1}
}

func (x *DashboardSpeechReply) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

// 请求-验证码
type SysAuthLoginCaptchaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysAuthLoginCaptchaReq) Reset() {
	*x = SysAuthLoginCaptchaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAuthLoginCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAuthLoginCaptchaReq) ProtoMessage() {}

func (x *SysAuthLoginCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAuthLoginCaptchaReq.ProtoReflect.Descriptor instead.
func (*SysAuthLoginCaptchaReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{2}
}

// 响应-验证码
type SysAuthLoginCaptchaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaptchaId  string `protobuf:"bytes,1,opt,name=captchaId,proto3" json:"captchaId,omitempty"`   //验证码ID
	CaptchaImg string `protobuf:"bytes,2,opt,name=captchaImg,proto3" json:"captchaImg,omitempty"` //验证码图片
}

func (x *SysAuthLoginCaptchaReply) Reset() {
	*x = SysAuthLoginCaptchaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAuthLoginCaptchaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAuthLoginCaptchaReply) ProtoMessage() {}

func (x *SysAuthLoginCaptchaReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAuthLoginCaptchaReply.ProtoReflect.Descriptor instead.
func (*SysAuthLoginCaptchaReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{3}
}

func (x *SysAuthLoginCaptchaReply) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

func (x *SysAuthLoginCaptchaReply) GetCaptchaImg() string {
	if x != nil {
		return x.CaptchaImg
	}
	return ""
}

// 请求-登录
type SysAuthLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaptchaId  string `protobuf:"bytes,1,opt,name=captchaId,proto3" json:"captchaId,omitempty"`   //验证码id
	VerifyCode string `protobuf:"bytes,2,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"` //验证码
	Username   string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`     //账号
	Password   string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`     //密码
}

func (x *SysAuthLoginReq) Reset() {
	*x = SysAuthLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAuthLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAuthLoginReq) ProtoMessage() {}

func (x *SysAuthLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAuthLoginReq.ProtoReflect.Descriptor instead.
func (*SysAuthLoginReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{4}
}

func (x *SysAuthLoginReq) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

func (x *SysAuthLoginReq) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

func (x *SysAuthLoginReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysAuthLoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 响应-登录
type SysAuthLoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`          //token
	ExpiredAt int64  `protobuf:"varint,2,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"` //过期时间
	RefreshAt int64  `protobuf:"varint,3,opt,name=refreshAt,proto3" json:"refreshAt,omitempty"` //刷新时间
}

func (x *SysAuthLoginReply) Reset() {
	*x = SysAuthLoginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAuthLoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAuthLoginReply) ProtoMessage() {}

func (x *SysAuthLoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAuthLoginReply.ProtoReflect.Descriptor instead.
func (*SysAuthLoginReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{5}
}

func (x *SysAuthLoginReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SysAuthLoginReply) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

func (x *SysAuthLoginReply) GetRefreshAt() int64 {
	if x != nil {
		return x.RefreshAt
	}
	return 0
}

// 请求-退出
type SysAuthLogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysAuthLogoutReq) Reset() {
	*x = SysAuthLogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAuthLogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAuthLogoutReq) ProtoMessage() {}

func (x *SysAuthLogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAuthLogoutReq.ProtoReflect.Descriptor instead.
func (*SysAuthLogoutReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{6}
}

// 响应-退出
type SysAuthLogoutReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysAuthLogoutReply) Reset() {
	*x = SysAuthLogoutReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAuthLogoutReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAuthLogoutReply) ProtoMessage() {}

func (x *SysAuthLogoutReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAuthLogoutReply.ProtoReflect.Descriptor instead.
func (*SysAuthLogoutReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{7}
}

// 管理员个人信息
type SysAdminInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`             // ID
	Username string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` // 账号
	Nickname string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"` // 昵称
	Avatar   string   `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`     // 头像
	Gender   int32    `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`    // 0=保密 1=女 2=男
	Email    string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`       // 邮件
	Mobile   string   `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile,omitempty"`     // 手机号
	JobID    string   `protobuf:"bytes,8,opt,name=jobID,proto3" json:"jobID,omitempty"`       // 岗位
	DeptID   string   `protobuf:"bytes,9,opt,name=deptID,proto3" json:"deptID,omitempty"`     // 部门
	RoleIds  []string `protobuf:"bytes,10,rep,name=roleIds,proto3" json:"roleIds,omitempty"`  // 角色集
	Motto    string   `protobuf:"bytes,11,opt,name=motto,proto3" json:"motto,omitempty"`      // 个性签名
}

func (x *SysAdminInfo) Reset() {
	*x = SysAdminInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminInfo) ProtoMessage() {}

func (x *SysAdminInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminInfo.ProtoReflect.Descriptor instead.
func (*SysAdminInfo) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{8}
}

func (x *SysAdminInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysAdminInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysAdminInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SysAdminInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysAdminInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SysAdminInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysAdminInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SysAdminInfo) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *SysAdminInfo) GetDeptID() string {
	if x != nil {
		return x.DeptID
	}
	return ""
}

func (x *SysAdminInfo) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *SysAdminInfo) GetMotto() string {
	if x != nil {
		return x.Motto
	}
	return ""
}

// 请求-管理员信息
type SysAdminInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysAdminInfoReq) Reset() {
	*x = SysAdminInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminInfoReq) ProtoMessage() {}

func (x *SysAdminInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminInfoReq.ProtoReflect.Descriptor instead.
func (*SysAdminInfoReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{9}
}

// 响应-管理员信息
type SysAdminInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SysAdminInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` //管理员信息
}

func (x *SysAdminInfoReply) Reset() {
	*x = SysAdminInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminInfoReply) ProtoMessage() {}

func (x *SysAdminInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminInfoReply.ProtoReflect.Descriptor instead.
func (*SysAdminInfoReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{10}
}

func (x *SysAdminInfoReply) GetInfo() *SysAdminInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 请求-管理员更新
type SysAdminInfoUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` //昵称
	Email    string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`       //邮件
	Mobile   string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`     //手机号
	Motto    string `protobuf:"bytes,5,opt,name=motto,proto3" json:"motto,omitempty"`       //个性签名
	Password string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"` //密码
}

func (x *SysAdminInfoUpdateReq) Reset() {
	*x = SysAdminInfoUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminInfoUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminInfoUpdateReq) ProtoMessage() {}

func (x *SysAdminInfoUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminInfoUpdateReq.ProtoReflect.Descriptor instead.
func (*SysAdminInfoUpdateReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{11}
}

func (x *SysAdminInfoUpdateReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SysAdminInfoUpdateReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysAdminInfoUpdateReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SysAdminInfoUpdateReq) GetMotto() string {
	if x != nil {
		return x.Motto
	}
	return ""
}

func (x *SysAdminInfoUpdateReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 响应-管理员更新
type SysAdminInfoUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysAdminInfoUpdateReply) Reset() {
	*x = SysAdminInfoUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminInfoUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminInfoUpdateReply) ProtoMessage() {}

func (x *SysAdminInfoUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminInfoUpdateReply.ProtoReflect.Descriptor instead.
func (*SysAdminInfoUpdateReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{12}
}

// 请求-生成头像
type SysAdminGenerateAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysAdminGenerateAvatarReq) Reset() {
	*x = SysAdminGenerateAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminGenerateAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminGenerateAvatarReq) ProtoMessage() {}

func (x *SysAdminGenerateAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminGenerateAvatarReq.ProtoReflect.Descriptor instead.
func (*SysAdminGenerateAvatarReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{13}
}

// 响应-生成头像
type SysAdminGenerateAvatarReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarUrl string `protobuf:"bytes,1,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"` //头像地址
}

func (x *SysAdminGenerateAvatarReply) Reset() {
	*x = SysAdminGenerateAvatarReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminGenerateAvatarReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminGenerateAvatarReply) ProtoMessage() {}

func (x *SysAdminGenerateAvatarReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminGenerateAvatarReply.ProtoReflect.Descriptor instead.
func (*SysAdminGenerateAvatarReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{14}
}

func (x *SysAdminGenerateAvatarReply) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

// 管理员信息
type SysManageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username  string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`    // 账号
	Nickname  string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`    // 昵称
	Avatar    string   `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`        // 头像
	Gender    int32    `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`       // 0=保密 1=女 2=男
	Email     string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`          // 邮件
	Mobile    string   `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile,omitempty"`        // 手机号
	JobID     string   `protobuf:"bytes,8,opt,name=jobID,proto3" json:"jobID,omitempty"`          // 岗位
	DeptID    string   `protobuf:"bytes,9,opt,name=deptID,proto3" json:"deptID,omitempty"`        // 部门
	RoleIds   []string `protobuf:"bytes,10,rep,name=roleIds,proto3" json:"roleIds,omitempty"`     // 角色集
	JobName   string   `protobuf:"bytes,11,opt,name=jobName,proto3" json:"jobName,omitempty"`     // 岗位
	DeptName  string   `protobuf:"bytes,12,opt,name=deptName,proto3" json:"deptName,omitempty"`   // 部门
	RoleNames []string `protobuf:"bytes,13,rep,name=roleNames,proto3" json:"roleNames,omitempty"` // 角色名称集
	Motto     string   `protobuf:"bytes,14,opt,name=motto,proto3" json:"motto,omitempty"`         // 个性签名
	Status    int32    `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`      //状态
	CreatedAt string   `protobuf:"bytes,16,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //创建时间
	UpdatedAt string   `protobuf:"bytes,17,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //更新时间
}

func (x *SysManageInfo) Reset() {
	*x = SysManageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageInfo) ProtoMessage() {}

func (x *SysManageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageInfo.ProtoReflect.Descriptor instead.
func (*SysManageInfo) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{15}
}

func (x *SysManageInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysManageInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysManageInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SysManageInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysManageInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SysManageInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysManageInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SysManageInfo) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *SysManageInfo) GetDeptID() string {
	if x != nil {
		return x.DeptID
	}
	return ""
}

func (x *SysManageInfo) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *SysManageInfo) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *SysManageInfo) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *SysManageInfo) GetRoleNames() []string {
	if x != nil {
		return x.RoleNames
	}
	return nil
}

func (x *SysManageInfo) GetMotto() string {
	if x != nil {
		return x.Motto
	}
	return ""
}

func (x *SysManageInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysManageInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysManageInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 管理员权限
type SysAdminPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string                `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`                // ID
	Pid       string                `protobuf:"bytes,2,opt,name=Pid,proto3" json:"Pid,omitempty"`              // 上级菜单
	Type      string                `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`            // 类型:menu_dir=菜单目录,menu=菜单项,button=页面按钮
	Title     string                `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`          // 标题
	Name      string                `protobuf:"bytes,5,opt,name=UpperName,proto3" json:"UpperName,omitempty"`  // 规则名称
	Path      string                `protobuf:"bytes,6,opt,name=Path,proto3" json:"Path,omitempty"`            // 路由路径
	Icon      string                `protobuf:"bytes,7,opt,name=Icon,proto3" json:"Icon,omitempty"`            // 图标
	MenuType  string                `protobuf:"bytes,8,opt,name=MenuType,proto3" json:"MenuType,omitempty"`    // 菜单类型:tab=选项卡,link=链接,iframe=Iframe
	URL       string                `protobuf:"bytes,9,opt,name=URL,proto3" json:"URL,omitempty"`              // Url
	Component string                `protobuf:"bytes,10,opt,name=Component,proto3" json:"Component,omitempty"` // 组件路径
	Extend    string                `protobuf:"bytes,11,opt,name=Extend,proto3" json:"Extend,omitempty"`       // 扩展属性:none=无,add_rules_only=只添加为路由,add_menu_only=只添加为菜单
	Children  []*SysAdminPermission `protobuf:"bytes,12,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *SysAdminPermission) Reset() {
	*x = SysAdminPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminPermission) ProtoMessage() {}

func (x *SysAdminPermission) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminPermission.ProtoReflect.Descriptor instead.
func (*SysAdminPermission) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{16}
}

func (x *SysAdminPermission) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SysAdminPermission) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *SysAdminPermission) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SysAdminPermission) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SysAdminPermission) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysAdminPermission) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysAdminPermission) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysAdminPermission) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *SysAdminPermission) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *SysAdminPermission) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysAdminPermission) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *SysAdminPermission) GetChildren() []*SysAdminPermission {
	if x != nil {
		return x.Children
	}
	return nil
}

// 请求-权限
type SysAdminPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysAdminPermissionReq) Reset() {
	*x = SysAdminPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminPermissionReq) ProtoMessage() {}

func (x *SysAdminPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminPermissionReq.ProtoReflect.Descriptor instead.
func (*SysAdminPermissionReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{17}
}

// 响应-权限
type SysAdminPermissionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SysAdminPermission `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` //列表
}

func (x *SysAdminPermissionReply) Reset() {
	*x = SysAdminPermissionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminPermissionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminPermissionReply) ProtoMessage() {}

func (x *SysAdminPermissionReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminPermissionReply.ProtoReflect.Descriptor instead.
func (*SysAdminPermissionReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{18}
}

func (x *SysAdminPermissionReply) GetList() []*SysAdminPermission {
	if x != nil {
		return x.List
	}
	return nil
}

// 响应-管理员列表
type SysManageListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List      []*SysManageInfo          `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`           //管理员列表
	Paginator *paginator.PaginatorReply `protobuf:"bytes,2,opt,name=paginator,proto3" json:"paginator,omitempty"` //分页
}

func (x *SysManageListReply) Reset() {
	*x = SysManageListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageListReply) ProtoMessage() {}

func (x *SysManageListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageListReply.ProtoReflect.Descriptor instead.
func (*SysManageListReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{19}
}

func (x *SysManageListReply) GetList() []*SysManageInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SysManageListReply) GetPaginator() *paginator.PaginatorReply {
	if x != nil {
		return x.Paginator
	}
	return nil
}

// 请求-管理员信息
type SysManageInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId string `protobuf:"bytes,1,opt,name=adminId,proto3" json:"adminId,omitempty"` //管理员ID
}

func (x *SysManageInfoReq) Reset() {
	*x = SysManageInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageInfoReq) ProtoMessage() {}

func (x *SysManageInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageInfoReq.ProtoReflect.Descriptor instead.
func (*SysManageInfoReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{20}
}

func (x *SysManageInfoReq) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

// 响应-管理员信息
type SysManageInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SysManageInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` //信息
}

func (x *SysManageInfoReply) Reset() {
	*x = SysManageInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageInfoReply) ProtoMessage() {}

func (x *SysManageInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageInfoReply.ProtoReflect.Descriptor instead.
func (*SysManageInfoReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{21}
}

func (x *SysManageInfoReply) GetInfo() *SysManageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 请求-管理员保存
type SysManageStoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`             //ID
	Username string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` // 账号
	Nickname string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"` // 昵称
	Password string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"` // 昵称
	Avatar   string   `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`     // 头像
	Gender   int32    `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`    // 0=保密 1=女 2=男
	Email    string   `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`       // 邮件
	Mobile   string   `protobuf:"bytes,8,opt,name=mobile,proto3" json:"mobile,omitempty"`     // 手机号
	JobID    string   `protobuf:"bytes,9,opt,name=jobID,proto3" json:"jobID,omitempty"`       // 岗位
	DeptID   string   `protobuf:"bytes,10,opt,name=deptID,proto3" json:"deptID,omitempty"`    // 部门
	RoleIds  []string `protobuf:"bytes,11,rep,name=roleIds,proto3" json:"roleIds,omitempty"`  // 角色集
	Motto    string   `protobuf:"bytes,12,opt,name=motto,proto3" json:"motto,omitempty"`      // 个性签名
	Status   int32    `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`   //状态
}

func (x *SysManageStoreReq) Reset() {
	*x = SysManageStoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageStoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageStoreReq) ProtoMessage() {}

func (x *SysManageStoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageStoreReq.ProtoReflect.Descriptor instead.
func (*SysManageStoreReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{22}
}

func (x *SysManageStoreReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysManageStoreReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysManageStoreReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SysManageStoreReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SysManageStoreReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysManageStoreReq) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SysManageStoreReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysManageStoreReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SysManageStoreReq) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *SysManageStoreReq) GetDeptID() string {
	if x != nil {
		return x.DeptID
	}
	return ""
}

func (x *SysManageStoreReq) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *SysManageStoreReq) GetMotto() string {
	if x != nil {
		return x.Motto
	}
	return ""
}

func (x *SysManageStoreReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 响应-管理员保存
type SysManageStoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysManageStoreReply) Reset() {
	*x = SysManageStoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageStoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageStoreReply) ProtoMessage() {}

func (x *SysManageStoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageStoreReply.ProtoReflect.Descriptor instead.
func (*SysManageStoreReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{23}
}

// 请求-管理员删除
type SysManageDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"` //ID集合
}

func (x *SysManageDelReq) Reset() {
	*x = SysManageDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageDelReq) ProtoMessage() {}

func (x *SysManageDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageDelReq.ProtoReflect.Descriptor instead.
func (*SysManageDelReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{24}
}

func (x *SysManageDelReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 响应-管理员删除
type SysManageDelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysManageDelReply) Reset() {
	*x = SysManageDelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageDelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageDelReply) ProtoMessage() {}

func (x *SysManageDelReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageDelReply.ProtoReflect.Descriptor instead.
func (*SysManageDelReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{25}
}

// API信息
type SysAPIInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                     // 编号
	PermissionID string `protobuf:"bytes,2,opt,name=permissionID,proto3" json:"permissionID,omitempty"` // 权限Id
	Method       string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`             // 方法
	Path         string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`                 // 路径
	Desc         string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`                 // 描述
	CreatedAt    string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`       // 创建时间
	UpdatedAt    string `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`       // 更新时间
}

func (x *SysAPIInfo) Reset() {
	*x = SysAPIInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAPIInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAPIInfo) ProtoMessage() {}

func (x *SysAPIInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAPIInfo.ProtoReflect.Descriptor instead.
func (*SysAPIInfo) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{26}
}

func (x *SysAPIInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysAPIInfo) GetPermissionID() string {
	if x != nil {
		return x.PermissionID
	}
	return ""
}

func (x *SysAPIInfo) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *SysAPIInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysAPIInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SysAPIInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysAPIInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 请求-API-列表
type SysAPIListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermissionId string `protobuf:"bytes,1,opt,name=permissionId,proto3" json:"permissionId,omitempty"` //权限ID
}

func (x *SysAPIListReq) Reset() {
	*x = SysAPIListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAPIListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAPIListReq) ProtoMessage() {}

func (x *SysAPIListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAPIListReq.ProtoReflect.Descriptor instead.
func (*SysAPIListReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{27}
}

func (x *SysAPIListReq) GetPermissionId() string {
	if x != nil {
		return x.PermissionId
	}
	return ""
}

// 响应-API-列表
type SysAPIListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SysAPIInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` //列表
}

func (x *SysAPIListReply) Reset() {
	*x = SysAPIListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAPIListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAPIListReply) ProtoMessage() {}

func (x *SysAPIListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAPIListReply.ProtoReflect.Descriptor instead.
func (*SysAPIListReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{28}
}

func (x *SysAPIListReply) GetList() []*SysAPIInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 请求-API-保存
type SysAPIStoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                     // 编号
	PermissionID string `protobuf:"bytes,2,opt,name=permissionID,proto3" json:"permissionID,omitempty"` // 权限Id
	Method       string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`             // 方法
	Path         string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`                 // 路径
	Desc         string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`                 // 描述
}

func (x *SysAPIStoreReq) Reset() {
	*x = SysAPIStoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAPIStoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAPIStoreReq) ProtoMessage() {}

func (x *SysAPIStoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAPIStoreReq.ProtoReflect.Descriptor instead.
func (*SysAPIStoreReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{29}
}

func (x *SysAPIStoreReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysAPIStoreReq) GetPermissionID() string {
	if x != nil {
		return x.PermissionID
	}
	return ""
}

func (x *SysAPIStoreReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *SysAPIStoreReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysAPIStoreReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 响应-API-保存
type SysAPIStoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //ID
}

func (x *SysAPIStoreReply) Reset() {
	*x = SysAPIStoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAPIStoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAPIStoreReply) ProtoMessage() {}

func (x *SysAPIStoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAPIStoreReply.ProtoReflect.Descriptor instead.
func (*SysAPIStoreReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{30}
}

func (x *SysAPIStoreReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 请求-API-删除
type SysAPIDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"` //ID集合
}

func (x *SysAPIDelReq) Reset() {
	*x = SysAPIDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAPIDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAPIDelReq) ProtoMessage() {}

func (x *SysAPIDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAPIDelReq.ProtoReflect.Descriptor instead.
func (*SysAPIDelReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{31}
}

func (x *SysAPIDelReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 响应-API-删除
type SysAPIDelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysAPIDelReply) Reset() {
	*x = SysAPIDelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAPIDelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAPIDelReply) ProtoMessage() {}

func (x *SysAPIDelReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAPIDelReply.ProtoReflect.Descriptor instead.
func (*SysAPIDelReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{32}
}

type SysDeptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                   // id
	Pid         string         `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"`                 // 父级id
	Name        string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`               // 部门简称
	FullName    string         `protobuf:"bytes,4,opt,name=fullName,proto3" json:"fullName,omitempty"`       // 部门全称
	Responsible string         `protobuf:"bytes,5,opt,name=responsible,proto3" json:"responsible,omitempty"` // 负责人
	Phone       string         `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`             //负责人电话
	Email       string         `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`             // 负责人邮箱
	Type        int32          `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`              // 1=公司 2=子公司 3=部门
	Status      int32          `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`          // 0=禁用 1=开启
	Sort        int32          `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`             // 排序值
	CreatedAt   string         `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    // 创建时间
	UpdatedAt   string         `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`    // 更新时间
	Children    []*SysDeptInfo `protobuf:"bytes,13,rep,name=children,proto3" json:"children,omitempty"`      //子集
}

func (x *SysDeptInfo) Reset() {
	*x = SysDeptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDeptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDeptInfo) ProtoMessage() {}

func (x *SysDeptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDeptInfo.ProtoReflect.Descriptor instead.
func (*SysDeptInfo) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{33}
}

func (x *SysDeptInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysDeptInfo) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *SysDeptInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysDeptInfo) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *SysDeptInfo) GetResponsible() string {
	if x != nil {
		return x.Responsible
	}
	return ""
}

func (x *SysDeptInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SysDeptInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysDeptInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SysDeptInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDeptInfo) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysDeptInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysDeptInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SysDeptInfo) GetChildren() []*SysDeptInfo {
	if x != nil {
		return x.Children
	}
	return nil
}

// 请求-部门列表
type SysDeptListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysDeptListReq) Reset() {
	*x = SysDeptListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDeptListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDeptListReq) ProtoMessage() {}

func (x *SysDeptListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDeptListReq.ProtoReflect.Descriptor instead.
func (*SysDeptListReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{34}
}

// 响应-部门列表
type SysDeptListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SysDeptInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` //列表
}

func (x *SysDeptListReply) Reset() {
	*x = SysDeptListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDeptListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDeptListReply) ProtoMessage() {}

func (x *SysDeptListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDeptListReply.ProtoReflect.Descriptor instead.
func (*SysDeptListReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{35}
}

func (x *SysDeptListReply) GetList() []*SysDeptInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 请求-部门信息
type SysDeptInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // id
}

func (x *SysDeptInfoReq) Reset() {
	*x = SysDeptInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDeptInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDeptInfoReq) ProtoMessage() {}

func (x *SysDeptInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDeptInfoReq.ProtoReflect.Descriptor instead.
func (*SysDeptInfoReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{36}
}

func (x *SysDeptInfoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 响应-部门信息
type SysDeptInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SysDeptInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` //部门信息
}

func (x *SysDeptInfoReply) Reset() {
	*x = SysDeptInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDeptInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDeptInfoReply) ProtoMessage() {}

func (x *SysDeptInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDeptInfoReply.ProtoReflect.Descriptor instead.
func (*SysDeptInfoReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{37}
}

func (x *SysDeptInfoReply) GetInfo() *SysDeptInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 请求-部门保存
type SysDeptStoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                   // id
	Pid         string `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"`                 // 父级id
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`               // 部门简称
	FullName    string `protobuf:"bytes,4,opt,name=fullName,proto3" json:"fullName,omitempty"`       // 部门全称
	Responsible string `protobuf:"bytes,5,opt,name=responsible,proto3" json:"responsible,omitempty"` // 负责人
	Phone       string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`             // 负责人电话
	Email       string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`             // 负责人邮箱
	Type        int32  `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`              // 1=公司 2=子公司 3=部门
	Status      int32  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`          // 0=禁用 1=开启
	Sort        int32  `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`             // 排序值
}

func (x *SysDeptStoreReq) Reset() {
	*x = SysDeptStoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDeptStoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDeptStoreReq) ProtoMessage() {}

func (x *SysDeptStoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDeptStoreReq.ProtoReflect.Descriptor instead.
func (*SysDeptStoreReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{38}
}

func (x *SysDeptStoreReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysDeptStoreReq) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *SysDeptStoreReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysDeptStoreReq) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *SysDeptStoreReq) GetResponsible() string {
	if x != nil {
		return x.Responsible
	}
	return ""
}

func (x *SysDeptStoreReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SysDeptStoreReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysDeptStoreReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SysDeptStoreReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDeptStoreReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

// 响应-部门保存
type SysDeptStoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysDeptStoreReply) Reset() {
	*x = SysDeptStoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDeptStoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDeptStoreReply) ProtoMessage() {}

func (x *SysDeptStoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDeptStoreReply.ProtoReflect.Descriptor instead.
func (*SysDeptStoreReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{39}
}

// 请求-部门删除
type SysDeptDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"` //ID集合
}

func (x *SysDeptDelReq) Reset() {
	*x = SysDeptDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDeptDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDeptDelReq) ProtoMessage() {}

func (x *SysDeptDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDeptDelReq.ProtoReflect.Descriptor instead.
func (*SysDeptDelReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{40}
}

func (x *SysDeptDelReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 响应-部门删除
type SysDeptDelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysDeptDelReply) Reset() {
	*x = SysDeptDelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDeptDelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDeptDelReply) ProtoMessage() {}

func (x *SysDeptDelReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDeptDelReply.ProtoReflect.Descriptor instead.
func (*SysDeptDelReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{41}
}

// 岗位信息
type SysJobInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`               // 编号
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`           // 岗位名称
	Code      string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`           //岗位编码
	Remark    string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`       //备注
	Status    int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`      // 0=禁用 1=开启
	Sort      int32  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`          // 排序值
	CreatedAt string `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"` // 创建时间
	UpdatedAt string `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` // 更新时间
}

func (x *SysJobInfo) Reset() {
	*x = SysJobInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobInfo) ProtoMessage() {}

func (x *SysJobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobInfo.ProtoReflect.Descriptor instead.
func (*SysJobInfo) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{42}
}

func (x *SysJobInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysJobInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysJobInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SysJobInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysJobInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysJobInfo) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysJobInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysJobInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 响应-岗位列表
type SysJobListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List      []*SysJobInfo             `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`           //列表
	Paginator *paginator.PaginatorReply `protobuf:"bytes,2,opt,name=paginator,proto3" json:"paginator,omitempty"` //分页
}

func (x *SysJobListReply) Reset() {
	*x = SysJobListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobListReply) ProtoMessage() {}

func (x *SysJobListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobListReply.ProtoReflect.Descriptor instead.
func (*SysJobListReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{43}
}

func (x *SysJobListReply) GetList() []*SysJobInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SysJobListReply) GetPaginator() *paginator.PaginatorReply {
	if x != nil {
		return x.Paginator
	}
	return nil
}

// 请求-岗位信息
type SysJobInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //ID
}

func (x *SysJobInfoReq) Reset() {
	*x = SysJobInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobInfoReq) ProtoMessage() {}

func (x *SysJobInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobInfoReq.ProtoReflect.Descriptor instead.
func (*SysJobInfoReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{44}
}

func (x *SysJobInfoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 响应-岗位信息
type SysJobInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SysJobInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` //岗位信息
}

func (x *SysJobInfoReply) Reset() {
	*x = SysJobInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobInfoReply) ProtoMessage() {}

func (x *SysJobInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobInfoReply.ProtoReflect.Descriptor instead.
func (*SysJobInfoReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{45}
}

func (x *SysJobInfoReply) GetInfo() *SysJobInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 请求-岗位保存
type SysJobStoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`          // 编号
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`      // 岗位名称
	Code   string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`      //岗位编码
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`  //备注
	Status int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"` // 0=禁用 1=开启
	Sort   int32  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`     // 排序值
}

func (x *SysJobStoreReq) Reset() {
	*x = SysJobStoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobStoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobStoreReq) ProtoMessage() {}

func (x *SysJobStoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobStoreReq.ProtoReflect.Descriptor instead.
func (*SysJobStoreReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{46}
}

func (x *SysJobStoreReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysJobStoreReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysJobStoreReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SysJobStoreReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysJobStoreReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysJobStoreReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

// 响应-岗位保存
type SysJobStoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysJobStoreReply) Reset() {
	*x = SysJobStoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobStoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobStoreReply) ProtoMessage() {}

func (x *SysJobStoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobStoreReply.ProtoReflect.Descriptor instead.
func (*SysJobStoreReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{47}
}

// 请求-岗位删除
type SysJobDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"` //ID集合
}

func (x *SysJobDelReq) Reset() {
	*x = SysJobDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobDelReq) ProtoMessage() {}

func (x *SysJobDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobDelReq.ProtoReflect.Descriptor instead.
func (*SysJobDelReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{48}
}

func (x *SysJobDelReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 响应-岗位删除
type SysJobDelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysJobDelReply) Reset() {
	*x = SysJobDelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobDelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobDelReply) ProtoMessage() {}

func (x *SysJobDelReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobDelReply.ProtoReflect.Descriptor instead.
func (*SysJobDelReply) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{49}
}

// 日志信息
type SysLogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                // 编号
	AdminID   string `protobuf:"bytes,2,opt,name=adminID,proto3" json:"adminID,omitempty"`      // 管理员ID
	Username  string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`    // 账号
	Ip        string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`                // ip
	Uri       string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`              // 请求路径
	UriDesc   string `protobuf:"bytes,6,opt,name=uriDesc,proto3" json:"uriDesc,omitempty"`      // 请求描述
	Useragent string `protobuf:"bytes,7,opt,name=useragent,proto3" json:"useragent,omitempty"`  // 浏览器标识
	Req       string `protobuf:"bytes,8,opt,name=req,proto3" json:"req,omitempty"`              // 请求数据
	Resp      string `protobuf:"bytes,9,opt,name=resp,proto3" json:"resp,omitempty"`            // 响应数据
	CreatedAt string `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"` // 创建时间
}

func (x *SysLogInfo) Reset() {
	*x = SysLogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogInfo) ProtoMessage() {}

func (x *SysLogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogInfo.ProtoReflect.Descriptor instead.
func (*SysLogInfo) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{50}
}

func (x *SysLogInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysLogInfo) GetAdminID() string {
	if x != nil {
		return x.AdminID
	}
	return ""
}

func (x *SysLogInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysLogInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SysLogInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *SysLogInfo) GetUriDesc() string {
	if x != nil {
		return x.UriDesc
	}
	return ""
}

func (x *SysLogInfo) GetUseragent() string {
	if x != nil {
		return x.Useragent
	}
	return ""
}

func (x *SysLogInfo) GetReq() string {
	if x != nil {
		return x.Req
	}
	return ""
}

func (x *SysLogInfo) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

func (x *SysLogInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// 请求-日志列表
type SysLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`         //页码
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` //页数
}

func (x *SysLogListReq) Reset() {
	*x = SysLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogListReq) ProtoMessage() {}

func (x *SysLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogListReq.ProtoReflect.Descriptor instead.
func (*SysLogListReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{51}
}

func (x *SysLogListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SysLogListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 响应-日志列表
type SysLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List      []*SysLogInfo             `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`           //管理员列表
	Paginator *paginator.PaginatorReply `protobuf:"bytes,2,opt,name=paginator,proto3" json:"paginator,omitempty"` //分页
}

func (x *SysLogListResp) Reset() {
	*x = SysLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogListResp) ProtoMessage() {}

func (x *SysLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogListResp.ProtoReflect.Descriptor instead.
func (*SysLogListResp) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{52}
}

func (x *SysLogListResp) GetList() []*SysLogInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SysLogListResp) GetPaginator() *paginator.PaginatorReply {
	if x != nil {
		return x.Paginator
	}
	return nil
}

// 请求-单条日志
type SysLogInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //ID
}

func (x *SysLogInfoReq) Reset() {
	*x = SysLogInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogInfoReq) ProtoMessage() {}

func (x *SysLogInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogInfoReq.ProtoReflect.Descriptor instead.
func (*SysLogInfoReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{53}
}

func (x *SysLogInfoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 响应-单条日志
type SysLogInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SysLogInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` //信息
}

func (x *SysLogInfoResp) Reset() {
	*x = SysLogInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogInfoResp) ProtoMessage() {}

func (x *SysLogInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogInfoResp.ProtoReflect.Descriptor instead.
func (*SysLogInfoResp) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{54}
}

func (x *SysLogInfoResp) GetInfo() *SysLogInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 请求-日志存储
type SysLogStoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminID   string `protobuf:"bytes,1,opt,name=adminID,proto3" json:"adminID,omitempty"`     // 管理员ID
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`   // 账号
	Ip        string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`               // ip
	Uri       string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`             // 请求路径
	UriDesc   string `protobuf:"bytes,5,opt,name=uriDesc,proto3" json:"uriDesc,omitempty"`     // 请求描述
	Useragent string `protobuf:"bytes,6,opt,name=useragent,proto3" json:"useragent,omitempty"` // 浏览器标识
	Req       string `protobuf:"bytes,7,opt,name=req,proto3" json:"req,omitempty"`             // 请求数据
	Resp      string `protobuf:"bytes,8,opt,name=resp,proto3" json:"resp,omitempty"`           // 响应数据
}

func (x *SysLogStoreReq) Reset() {
	*x = SysLogStoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogStoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogStoreReq) ProtoMessage() {}

func (x *SysLogStoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogStoreReq.ProtoReflect.Descriptor instead.
func (*SysLogStoreReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{55}
}

func (x *SysLogStoreReq) GetAdminID() string {
	if x != nil {
		return x.AdminID
	}
	return ""
}

func (x *SysLogStoreReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysLogStoreReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SysLogStoreReq) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *SysLogStoreReq) GetUriDesc() string {
	if x != nil {
		return x.UriDesc
	}
	return ""
}

func (x *SysLogStoreReq) GetUseragent() string {
	if x != nil {
		return x.Useragent
	}
	return ""
}

func (x *SysLogStoreReq) GetReq() string {
	if x != nil {
		return x.Req
	}
	return ""
}

func (x *SysLogStoreReq) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

// 响应-日志存储
type SysLogStoreResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SysLogInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` //信息
}

func (x *SysLogStoreResp) Reset() {
	*x = SysLogStoreResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogStoreResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogStoreResp) ProtoMessage() {}

func (x *SysLogStoreResp) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogStoreResp.ProtoReflect.Descriptor instead.
func (*SysLogStoreResp) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{56}
}

func (x *SysLogStoreResp) GetInfo() *SysLogInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 权限信息
type SysPermissionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                 // ID
	Pid       string               `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"`               // 上级菜单
	Type      string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`             // 类型:menu_dir=菜单目录,menu=菜单项,button=页面按钮
	Title     string               `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`           // 标题
	Name      string               `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`             // 规则名称
	Path      string               `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`             // 路由路径
	Icon      string               `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`             // 图标
	MenuType  string               `protobuf:"bytes,8,opt,name=menuType,proto3" json:"menuType,omitempty"`     // 菜单类型:tab=选项卡,link=链接,iframe=Iframe
	Url       string               `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`               // Url
	Component string               `protobuf:"bytes,10,opt,name=component,proto3" json:"component,omitempty"`  // 组件路径
	Keepalive int32                `protobuf:"varint,11,opt,name=keepalive,proto3" json:"keepalive,omitempty"` // 缓存:0=关闭,1=开启
	Extend    string               `protobuf:"bytes,12,opt,name=extend,proto3" json:"extend,omitempty"`        // 扩展属性:none=无,add_rules_only=只添加为路由,add_menu_only=只添加为菜单
	Remark    string               `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`        // 备注
	Sort      int32                `protobuf:"varint,14,opt,name=sort,proto3" json:"sort,omitempty"`           // 权重(排序)
	Status    int32                `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`       // 状态:0=禁用,1=启用
	CreatedAt string               `protobuf:"bytes,16,opt,name=createdAt,proto3" json:"createdAt,omitempty"`  // 创建时间
	UpdatedAt string               `protobuf:"bytes,17,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`  // 更新时间
	Children  []*SysPermissionInfo `protobuf:"bytes,18,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *SysPermissionInfo) Reset() {
	*x = SysPermissionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPermissionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPermissionInfo) ProtoMessage() {}

func (x *SysPermissionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPermissionInfo.ProtoReflect.Descriptor instead.
func (*SysPermissionInfo) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{57}
}

func (x *SysPermissionInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysPermissionInfo) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *SysPermissionInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SysPermissionInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SysPermissionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysPermissionInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysPermissionInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysPermissionInfo) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *SysPermissionInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SysPermissionInfo) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysPermissionInfo) GetKeepalive() int32 {
	if x != nil {
		return x.Keepalive
	}
	return 0
}

func (x *SysPermissionInfo) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *SysPermissionInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysPermissionInfo) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysPermissionInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysPermissionInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysPermissionInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SysPermissionInfo) GetChildren() []*SysPermissionInfo {
	if x != nil {
		return x.Children
	}
	return nil
}

// 请求-权限-列表
type SysPermissionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysPermissionListReq) Reset() {
	*x = SysPermissionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPermissionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPermissionListReq) ProtoMessage() {}

func (x *SysPermissionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPermissionListReq.ProtoReflect.Descriptor instead.
func (*SysPermissionListReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{58}
}

// 响应-权限-列表
type SysPermissionListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SysPermissionInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` //列表
}

func (x *SysPermissionListResp) Reset() {
	*x = SysPermissionListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPermissionListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPermissionListResp) ProtoMessage() {}

func (x *SysPermissionListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPermissionListResp.ProtoReflect.Descriptor instead.
func (*SysPermissionListResp) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{59}
}

func (x *SysPermissionListResp) GetList() []*SysPermissionInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 请求-权限-单个权限信息
type SysPermissionInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //ID
}

func (x *SysPermissionInfoReq) Reset() {
	*x = SysPermissionInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPermissionInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPermissionInfoReq) ProtoMessage() {}

func (x *SysPermissionInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPermissionInfoReq.ProtoReflect.Descriptor instead.
func (*SysPermissionInfoReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{60}
}

func (x *SysPermissionInfoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 响应-权限-单个权限信息
type SysPermissionInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SysPermissionInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` //信息
}

func (x *SysPermissionInfoResp) Reset() {
	*x = SysPermissionInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPermissionInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPermissionInfoResp) ProtoMessage() {}

func (x *SysPermissionInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPermissionInfoResp.ProtoReflect.Descriptor instead.
func (*SysPermissionInfoResp) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{61}
}

func (x *SysPermissionInfoResp) GetInfo() *SysPermissionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 请求-权限-保存
type SysPermissionStoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                 // ID
	Pid       string `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"`               // 上级菜单
	Type      string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`             // 类型:menu_dir=菜单目录,menu=菜单项,button=页面按钮
	Title     string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`           // 标题
	Name      string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`             // 规则名称
	Path      string `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`             // 路由路径
	Icon      string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`             // 图标
	MenuType  string `protobuf:"bytes,8,opt,name=menuType,proto3" json:"menuType,omitempty"`     // 菜单类型:tab=选项卡,link=链接,iframe=Iframe
	Url       string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`               // Url
	Component string `protobuf:"bytes,10,opt,name=component,proto3" json:"component,omitempty"`  // 组件路径
	Keepalive int32  `protobuf:"varint,11,opt,name=keepalive,proto3" json:"keepalive,omitempty"` // 缓存:0=关闭,1=开启
	Extend    string `protobuf:"bytes,12,opt,name=extend,proto3" json:"extend,omitempty"`        // 扩展属性:none=无,add_rules_only=只添加为路由,add_menu_only=只添加为菜单
	Remark    string `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`        // 备注
	Sort      int32  `protobuf:"varint,14,opt,name=sort,proto3" json:"sort,omitempty"`           // 权重(排序)
	Status    int32  `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`       // 状态:0=禁用,1=启用
}

func (x *SysPermissionStoreReq) Reset() {
	*x = SysPermissionStoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPermissionStoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPermissionStoreReq) ProtoMessage() {}

func (x *SysPermissionStoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPermissionStoreReq.ProtoReflect.Descriptor instead.
func (*SysPermissionStoreReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{62}
}

func (x *SysPermissionStoreReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysPermissionStoreReq) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *SysPermissionStoreReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SysPermissionStoreReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SysPermissionStoreReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysPermissionStoreReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysPermissionStoreReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysPermissionStoreReq) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *SysPermissionStoreReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SysPermissionStoreReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysPermissionStoreReq) GetKeepalive() int32 {
	if x != nil {
		return x.Keepalive
	}
	return 0
}

func (x *SysPermissionStoreReq) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *SysPermissionStoreReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysPermissionStoreReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysPermissionStoreReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 响应-权限-保存
type SysPermissionStoreResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysPermissionStoreResp) Reset() {
	*x = SysPermissionStoreResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPermissionStoreResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPermissionStoreResp) ProtoMessage() {}

func (x *SysPermissionStoreResp) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPermissionStoreResp.ProtoReflect.Descriptor instead.
func (*SysPermissionStoreResp) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{63}
}

// 请求-权限-删除
type SysPermissionDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"` //ID集合
}

func (x *SysPermissionDelReq) Reset() {
	*x = SysPermissionDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPermissionDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPermissionDelReq) ProtoMessage() {}

func (x *SysPermissionDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPermissionDelReq.ProtoReflect.Descriptor instead.
func (*SysPermissionDelReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{64}
}

func (x *SysPermissionDelReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 响应-权限-删除
type SysPermissionDelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysPermissionDelResp) Reset() {
	*x = SysPermissionDelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPermissionDelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPermissionDelResp) ProtoMessage() {}

func (x *SysPermissionDelResp) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPermissionDelResp.ProtoReflect.Descriptor instead.
func (*SysPermissionDelResp) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{65}
}

// 请求-权限-修改状态
type SysPermissionStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` // 状态:0=禁用,1=启用
}

func (x *SysPermissionStatusReq) Reset() {
	*x = SysPermissionStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPermissionStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPermissionStatusReq) ProtoMessage() {}

func (x *SysPermissionStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPermissionStatusReq.ProtoReflect.Descriptor instead.
func (*SysPermissionStatusReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{66}
}

func (x *SysPermissionStatusReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysPermissionStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 响应-权限-修改状态
type SysPermissionStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysPermissionStatusResp) Reset() {
	*x = SysPermissionStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysPermissionStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysPermissionStatusResp) ProtoMessage() {}

func (x *SysPermissionStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysPermissionStatusResp.ProtoReflect.Descriptor instead.
func (*SysPermissionStatusResp) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{67}
}

// 角色信息
type SysRoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                       //角色id
	Pid           string         `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"`                     //父级角色id
	Name          string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                   //角色名称
	Remark        string         `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`               //备注
	Status        int32          `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`              //状态
	Sort          int32          `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`                  //排序
	PermissionIds []string       `protobuf:"bytes,7,rep,name=permissionIds,proto3" json:"permissionIds,omitempty"` //菜单角色集合
	CreatedAt     string         `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`         //创建时间
	UpdatedAt     string         `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`         //更新时间
	Children      []*SysRoleInfo `protobuf:"bytes,10,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *SysRoleInfo) Reset() {
	*x = SysRoleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleInfo) ProtoMessage() {}

func (x *SysRoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleInfo.ProtoReflect.Descriptor instead.
func (*SysRoleInfo) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{68}
}

func (x *SysRoleInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysRoleInfo) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *SysRoleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysRoleInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysRoleInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysRoleInfo) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysRoleInfo) GetPermissionIds() []string {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

func (x *SysRoleInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysRoleInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SysRoleInfo) GetChildren() []*SysRoleInfo {
	if x != nil {
		return x.Children
	}
	return nil
}

// 请求-角色-列表
type SysRoleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysRoleListReq) Reset() {
	*x = SysRoleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleListReq) ProtoMessage() {}

func (x *SysRoleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleListReq.ProtoReflect.Descriptor instead.
func (*SysRoleListReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{69}
}

// 响应-角色-列表
type SysRoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SysRoleInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` //列表
}

func (x *SysRoleListResp) Reset() {
	*x = SysRoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleListResp) ProtoMessage() {}

func (x *SysRoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleListResp.ProtoReflect.Descriptor instead.
func (*SysRoleListResp) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{70}
}

func (x *SysRoleListResp) GetList() []*SysRoleInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 请求-角色-信息
type SysRoleInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //ID
}

func (x *SysRoleInfoReq) Reset() {
	*x = SysRoleInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleInfoReq) ProtoMessage() {}

func (x *SysRoleInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleInfoReq.ProtoReflect.Descriptor instead.
func (*SysRoleInfoReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{71}
}

func (x *SysRoleInfoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 响应-角色-信息
type SysRoleInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SysRoleInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` //信息
}

func (x *SysRoleInfoResp) Reset() {
	*x = SysRoleInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleInfoResp) ProtoMessage() {}

func (x *SysRoleInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleInfoResp.ProtoReflect.Descriptor instead.
func (*SysRoleInfoResp) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{72}
}

func (x *SysRoleInfoResp) GetInfo() *SysRoleInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 请求-角色-保存
type SysRoleStoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                       //角色id
	Pid           string   `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"`                     //父级角色id
	Name          string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                   //角色名称
	Remark        string   `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`               //备注
	Status        int32    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`              //状态
	PermissionIds []string `protobuf:"bytes,6,rep,name=permissionIds,proto3" json:"permissionIds,omitempty"` //菜单角色集合
}

func (x *SysRoleStoreReq) Reset() {
	*x = SysRoleStoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleStoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleStoreReq) ProtoMessage() {}

func (x *SysRoleStoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleStoreReq.ProtoReflect.Descriptor instead.
func (*SysRoleStoreReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{73}
}

func (x *SysRoleStoreReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysRoleStoreReq) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *SysRoleStoreReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysRoleStoreReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysRoleStoreReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysRoleStoreReq) GetPermissionIds() []string {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

// 响应-角色-保存
type SysRoleStoreResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysRoleStoreResp) Reset() {
	*x = SysRoleStoreResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleStoreResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleStoreResp) ProtoMessage() {}

func (x *SysRoleStoreResp) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleStoreResp.ProtoReflect.Descriptor instead.
func (*SysRoleStoreResp) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{74}
}

// 请求-角色-删除
type SysRoleDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"` //ID集合
}

func (x *SysRoleDelReq) Reset() {
	*x = SysRoleDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleDelReq) ProtoMessage() {}

func (x *SysRoleDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleDelReq.ProtoReflect.Descriptor instead.
func (*SysRoleDelReq) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{75}
}

func (x *SysRoleDelReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 响应-角色-删除
type SysRoleDelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysRoleDelResp) Reset() {
	*x = SysRoleDelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_admin_v1_sys_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleDelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleDelResp) ProtoMessage() {}

func (x *SysRoleDelResp) ProtoReflect() protoreflect.Message {
	mi := &file_bff_admin_v1_sys_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleDelResp.ProtoReflect.Descriptor instead.
func (*SysRoleDelResp) Descriptor() ([]byte, []int) {
	return file_bff_admin_v1_sys_proto_rawDescGZIP(), []int{76}
}

var File_bff_admin_v1_sys_proto protoreflect.FileDescriptor

var file_bff_admin_v1_sys_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66,
	0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x22, 0x2a, 0x0a, 0x14, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53,
	0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x18,
	0x0a, 0x16, 0x53, 0x79, 0x73, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x71, 0x22, 0x58, 0x0a, 0x18, 0x53, 0x79, 0x73, 0x41,
	0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x49, 0x6d, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x49,
	0x6d, 0x67, 0x22, 0x87, 0x01, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x65, 0x0a, 0x11,
	0x53, 0x79, 0x73, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x41, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x41, 0x75,
	0x74, 0x68, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x92, 0x02,
	0x0a, 0x0c, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x70, 0x74, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x74,
	0x74, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x22, 0x47, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xcc,
	0x01, 0x0a, 0x15, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x00, 0x18, 0x32, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x00, 0x18, 0x32, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x21, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x00, 0x18, 0x0f, 0x52, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x00, 0x18, 0xff, 0x01, 0x52, 0x05,
	0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x12, 0x26, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x00,
	0x18, 0x80, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x19, 0x0a,
	0x17, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x22, 0x3b, 0x0a, 0x1b, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55,
	0x72, 0x6c, 0x22, 0xbb, 0x03, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xc2, 0x02, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x49,
	0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x52, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x12, 0x40, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x53,
	0x0a, 0x17, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66,
	0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x36, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x07,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64,
	0x22, 0x49, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xcb, 0x02, 0x0a, 0x11,
	0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70,
	0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x74, 0x74, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x74, 0x74,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x79, 0x73,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x23, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xbc, 0x01, 0x0a, 0x0a, 0x53,
	0x79, 0x73, 0x41, 0x50, 0x49, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x33, 0x0a, 0x0d, 0x53, 0x79, 0x73,
	0x41, 0x50, 0x49, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x43,
	0x0a, 0x0f, 0x53, 0x79, 0x73, 0x41, 0x50, 0x49, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x50, 0x49, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x41, 0x50, 0x49, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x22, 0x0a, 0x10, 0x53, 0x79,
	0x73, 0x41, 0x50, 0x49, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20,
	0x0a, 0x0c, 0x53, 0x79, 0x73, 0x41, 0x50, 0x49, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x10, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x41, 0x50, 0x49, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0xe4, 0x02, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x79, 0x73,
	0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x45, 0x0a, 0x10, 0x53,
	0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xf1, 0x01, 0x0a, 0x0f,
	0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22,
	0x13, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x44,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x44, 0x65,
	0x70, 0x74, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc4, 0x01, 0x0a, 0x0a, 0x53,
	0x79, 0x73, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x7c, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x22,
	0x1f, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x43, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x4a,
	0x6f, 0x62, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x79,
	0x73, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xf0, 0x01, 0x0a,
	0x0a, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x72, 0x69, 0x44, 0x65, 0x73, 0x63, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x72, 0x69, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x73,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x3f, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x7b, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x1f, 0x0a,
	0x0d, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42,
	0x0a, 0x0e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0xc6, 0x01, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x18, 0x0a,
	0x07, 0x75, 0x72, 0x69, 0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x75, 0x72, 0x69, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x43, 0x0a, 0x0f, 0x53,
	0x79, 0x73, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0xde, 0x03, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65,
	0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b,
	0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x3f, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x12, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x50, 0x0a, 0x15, 0x53, 0x79, 0x73,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x53,
	0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x15, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xe5, 0x02, 0x0a, 0x15, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x18, 0x0a,
	0x16, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x16, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x40, 0x0a, 0x16, 0x53, 0x79, 0x73, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x79,
	0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa4, 0x02, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x10, 0x0a, 0x0e,
	0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x44,
	0x0a, 0x0f, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66,
	0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x9d, 0x01, 0x0a,
	0x0f, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x12, 0x0a, 0x10,
	0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x21, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x32, 0xf1, 0x23, 0x0a, 0x03, 0x53, 0x79, 0x73, 0x12, 0x87, 0x01,
	0x0a, 0x0f, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x65, 0x63,
	0x68, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x70,
	0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66,
	0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x12, 0x99, 0x01, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x41,
	0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12,
	0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x12, 0x7f, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x75, 0x74,
	0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x83, 0x01, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x41, 0x75, 0x74, 0x68,
	0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x75, 0x74,
	0x68, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x7c, 0x0a, 0x0c, 0x53, 0x79,
	0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x98, 0x01, 0x0a, 0x12, 0x53, 0x79, 0x73,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23,
	0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79,
	0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x16, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x2b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x94,
	0x01, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x12, 0x22, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73,
	0x2f, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x75, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x80, 0x01, 0x0a,
	0x0d, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x12, 0x1d, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f,
	0x73, 0x79, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x87, 0x01, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66,
	0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x29,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x7f, 0x0a, 0x0c, 0x53, 0x79, 0x73,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x12, 0x74, 0x0a, 0x0a, 0x53, 0x79,
	0x73, 0x41, 0x50, 0x49, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41,
	0x50, 0x49, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x41, 0x50, 0x49, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x7b, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x41, 0x50, 0x49, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x50, 0x49, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x50, 0x49, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a,
	0x22, 0x1b, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f,
	0x73, 0x79, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x73, 0x0a,
	0x09, 0x53, 0x79, 0x73, 0x41, 0x50, 0x49, 0x44, 0x65, 0x6c, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x41, 0x50, 0x49, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x41, 0x50, 0x49, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x64,
	0x65, 0x6c, 0x12, 0x78, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12,
	0x1b, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73,
	0x79, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x78, 0x0a, 0x0b,
	0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x64, 0x65, 0x70,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x7f, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x44, 0x65, 0x70, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x64, 0x65, 0x70,
	0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x77, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x44, 0x65,
	0x70, 0x74, 0x44, 0x65, 0x6c, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x65, 0x70,
	0x74, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x64, 0x65, 0x6c,
	0x12, 0x6c, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17,
	0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66,
	0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f,
	0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79,
	0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x74,
	0x0a, 0x0a, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x6a, 0x6f, 0x62, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x7b, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x73, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x6c, 0x12, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x6a,
	0x6f, 0x62, 0x5f, 0x64, 0x65, 0x6c, 0x12, 0x6b, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x73, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f,
	0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x7a, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x4c,
	0x6f, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66,
	0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f,
	0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x4c, 0x6f, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x26, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x29, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x8f, 0x01, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x96, 0x01, 0x0a, 0x12, 0x53, 0x79, 0x73,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73,
	0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x8e, 0x01, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a,
	0x22, 0x20, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f,
	0x73, 0x79, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x65, 0x6c, 0x12, 0x9a, 0x01, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x77, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x77, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66,
	0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x7e, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21,
	0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x76, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x12,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x42, 0x1d, 0x5a, 0x1b, 0x66, 0x6b, 0x72,
	0x61, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x66, 0x66, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bff_admin_v1_sys_proto_rawDescOnce sync.Once
	file_bff_admin_v1_sys_proto_rawDescData = file_bff_admin_v1_sys_proto_rawDesc
)

func file_bff_admin_v1_sys_proto_rawDescGZIP() []byte {
	file_bff_admin_v1_sys_proto_rawDescOnce.Do(func() {
		file_bff_admin_v1_sys_proto_rawDescData = protoimpl.X.CompressGZIP(file_bff_admin_v1_sys_proto_rawDescData)
	})
	return file_bff_admin_v1_sys_proto_rawDescData
}

var file_bff_admin_v1_sys_proto_msgTypes = make([]protoimpl.MessageInfo, 77)
var file_bff_admin_v1_sys_proto_goTypes = []interface{}{
	(*DashboardSpeechReq)(nil),          // 0: api.bff_admin.v1.DashboardSpeechReq
	(*DashboardSpeechReply)(nil),        // 1: api.bff_admin.v1.DashboardSpeechReply
	(*SysAuthLoginCaptchaReq)(nil),      // 2: api.bff_admin.v1.SysAuthLoginCaptchaReq
	(*SysAuthLoginCaptchaReply)(nil),    // 3: api.bff_admin.v1.SysAuthLoginCaptchaReply
	(*SysAuthLoginReq)(nil),             // 4: api.bff_admin.v1.SysAuthLoginReq
	(*SysAuthLoginReply)(nil),           // 5: api.bff_admin.v1.SysAuthLoginReply
	(*SysAuthLogoutReq)(nil),            // 6: api.bff_admin.v1.SysAuthLogoutReq
	(*SysAuthLogoutReply)(nil),          // 7: api.bff_admin.v1.SysAuthLogoutReply
	(*SysAdminInfo)(nil),                // 8: api.bff_admin.v1.SysAdminInfo
	(*SysAdminInfoReq)(nil),             // 9: api.bff_admin.v1.SysAdminInfoReq
	(*SysAdminInfoReply)(nil),           // 10: api.bff_admin.v1.SysAdminInfoReply
	(*SysAdminInfoUpdateReq)(nil),       // 11: api.bff_admin.v1.SysAdminInfoUpdateReq
	(*SysAdminInfoUpdateReply)(nil),     // 12: api.bff_admin.v1.SysAdminInfoUpdateReply
	(*SysAdminGenerateAvatarReq)(nil),   // 13: api.bff_admin.v1.SysAdminGenerateAvatarReq
	(*SysAdminGenerateAvatarReply)(nil), // 14: api.bff_admin.v1.SysAdminGenerateAvatarReply
	(*SysManageInfo)(nil),               // 15: api.bff_admin.v1.SysManageInfo
	(*SysAdminPermission)(nil),          // 16: api.bff_admin.v1.SysAdminPermission
	(*SysAdminPermissionReq)(nil),       // 17: api.bff_admin.v1.SysAdminPermissionReq
	(*SysAdminPermissionReply)(nil),     // 18: api.bff_admin.v1.SysAdminPermissionReply
	(*SysManageListReply)(nil),          // 19: api.bff_admin.v1.SysManageListReply
	(*SysManageInfoReq)(nil),            // 20: api.bff_admin.v1.SysManageInfoReq
	(*SysManageInfoReply)(nil),          // 21: api.bff_admin.v1.SysManageInfoReply
	(*SysManageStoreReq)(nil),           // 22: api.bff_admin.v1.SysManageStoreReq
	(*SysManageStoreReply)(nil),         // 23: api.bff_admin.v1.SysManageStoreReply
	(*SysManageDelReq)(nil),             // 24: api.bff_admin.v1.SysManageDelReq
	(*SysManageDelReply)(nil),           // 25: api.bff_admin.v1.SysManageDelReply
	(*SysAPIInfo)(nil),                  // 26: api.bff_admin.v1.SysAPIInfo
	(*SysAPIListReq)(nil),               // 27: api.bff_admin.v1.SysAPIListReq
	(*SysAPIListReply)(nil),             // 28: api.bff_admin.v1.SysAPIListReply
	(*SysAPIStoreReq)(nil),              // 29: api.bff_admin.v1.SysAPIStoreReq
	(*SysAPIStoreReply)(nil),            // 30: api.bff_admin.v1.SysAPIStoreReply
	(*SysAPIDelReq)(nil),                // 31: api.bff_admin.v1.SysAPIDelReq
	(*SysAPIDelReply)(nil),              // 32: api.bff_admin.v1.SysAPIDelReply
	(*SysDeptInfo)(nil),                 // 33: api.bff_admin.v1.SysDeptInfo
	(*SysDeptListReq)(nil),              // 34: api.bff_admin.v1.SysDeptListReq
	(*SysDeptListReply)(nil),            // 35: api.bff_admin.v1.SysDeptListReply
	(*SysDeptInfoReq)(nil),              // 36: api.bff_admin.v1.SysDeptInfoReq
	(*SysDeptInfoReply)(nil),            // 37: api.bff_admin.v1.SysDeptInfoReply
	(*SysDeptStoreReq)(nil),             // 38: api.bff_admin.v1.SysDeptStoreReq
	(*SysDeptStoreReply)(nil),           // 39: api.bff_admin.v1.SysDeptStoreReply
	(*SysDeptDelReq)(nil),               // 40: api.bff_admin.v1.SysDeptDelReq
	(*SysDeptDelReply)(nil),             // 41: api.bff_admin.v1.SysDeptDelReply
	(*SysJobInfo)(nil),                  // 42: api.bff_admin.v1.SysJobInfo
	(*SysJobListReply)(nil),             // 43: api.bff_admin.v1.SysJobListReply
	(*SysJobInfoReq)(nil),               // 44: api.bff_admin.v1.SysJobInfoReq
	(*SysJobInfoReply)(nil),             // 45: api.bff_admin.v1.SysJobInfoReply
	(*SysJobStoreReq)(nil),              // 46: api.bff_admin.v1.SysJobStoreReq
	(*SysJobStoreReply)(nil),            // 47: api.bff_admin.v1.SysJobStoreReply
	(*SysJobDelReq)(nil),                // 48: api.bff_admin.v1.SysJobDelReq
	(*SysJobDelReply)(nil),              // 49: api.bff_admin.v1.SysJobDelReply
	(*SysLogInfo)(nil),                  // 50: api.bff_admin.v1.SysLogInfo
	(*SysLogListReq)(nil),               // 51: api.bff_admin.v1.SysLogListReq
	(*SysLogListResp)(nil),              // 52: api.bff_admin.v1.SysLogListResp
	(*SysLogInfoReq)(nil),               // 53: api.bff_admin.v1.SysLogInfoReq
	(*SysLogInfoResp)(nil),              // 54: api.bff_admin.v1.SysLogInfoResp
	(*SysLogStoreReq)(nil),              // 55: api.bff_admin.v1.SysLogStoreReq
	(*SysLogStoreResp)(nil),             // 56: api.bff_admin.v1.SysLogStoreResp
	(*SysPermissionInfo)(nil),           // 57: api.bff_admin.v1.SysPermissionInfo
	(*SysPermissionListReq)(nil),        // 58: api.bff_admin.v1.SysPermissionListReq
	(*SysPermissionListResp)(nil),       // 59: api.bff_admin.v1.SysPermissionListResp
	(*SysPermissionInfoReq)(nil),        // 60: api.bff_admin.v1.SysPermissionInfoReq
	(*SysPermissionInfoResp)(nil),       // 61: api.bff_admin.v1.SysPermissionInfoResp
	(*SysPermissionStoreReq)(nil),       // 62: api.bff_admin.v1.SysPermissionStoreReq
	(*SysPermissionStoreResp)(nil),      // 63: api.bff_admin.v1.SysPermissionStoreResp
	(*SysPermissionDelReq)(nil),         // 64: api.bff_admin.v1.SysPermissionDelReq
	(*SysPermissionDelResp)(nil),        // 65: api.bff_admin.v1.SysPermissionDelResp
	(*SysPermissionStatusReq)(nil),      // 66: api.bff_admin.v1.SysPermissionStatusReq
	(*SysPermissionStatusResp)(nil),     // 67: api.bff_admin.v1.SysPermissionStatusResp
	(*SysRoleInfo)(nil),                 // 68: api.bff_admin.v1.SysRoleInfo
	(*SysRoleListReq)(nil),              // 69: api.bff_admin.v1.SysRoleListReq
	(*SysRoleListResp)(nil),             // 70: api.bff_admin.v1.SysRoleListResp
	(*SysRoleInfoReq)(nil),              // 71: api.bff_admin.v1.SysRoleInfoReq
	(*SysRoleInfoResp)(nil),             // 72: api.bff_admin.v1.SysRoleInfoResp
	(*SysRoleStoreReq)(nil),             // 73: api.bff_admin.v1.SysRoleStoreReq
	(*SysRoleStoreResp)(nil),            // 74: api.bff_admin.v1.SysRoleStoreResp
	(*SysRoleDelReq)(nil),               // 75: api.bff_admin.v1.SysRoleDelReq
	(*SysRoleDelResp)(nil),              // 76: api.bff_admin.v1.SysRoleDelResp
	(*paginator.PaginatorReply)(nil),    // 77: paginator.PaginatorReply
	(*paginator.PaginatorReq)(nil),      // 78: paginator.PaginatorReq
}
var file_bff_admin_v1_sys_proto_depIdxs = []int32{
	8,  // 0: api.bff_admin.v1.SysAdminInfoReply.info:type_name -> api.bff_admin.v1.SysAdminInfo
	16, // 1: api.bff_admin.v1.SysAdminPermission.children:type_name -> api.bff_admin.v1.SysAdminPermission
	16, // 2: api.bff_admin.v1.SysAdminPermissionReply.list:type_name -> api.bff_admin.v1.SysAdminPermission
	15, // 3: api.bff_admin.v1.SysManageListReply.list:type_name -> api.bff_admin.v1.SysManageInfo
	77, // 4: api.bff_admin.v1.SysManageListReply.paginator:type_name -> paginator.PaginatorReply
	15, // 5: api.bff_admin.v1.SysManageInfoReply.info:type_name -> api.bff_admin.v1.SysManageInfo
	26, // 6: api.bff_admin.v1.SysAPIListReply.list:type_name -> api.bff_admin.v1.SysAPIInfo
	33, // 7: api.bff_admin.v1.SysDeptInfo.children:type_name -> api.bff_admin.v1.SysDeptInfo
	33, // 8: api.bff_admin.v1.SysDeptListReply.list:type_name -> api.bff_admin.v1.SysDeptInfo
	33, // 9: api.bff_admin.v1.SysDeptInfoReply.info:type_name -> api.bff_admin.v1.SysDeptInfo
	42, // 10: api.bff_admin.v1.SysJobListReply.list:type_name -> api.bff_admin.v1.SysJobInfo
	77, // 11: api.bff_admin.v1.SysJobListReply.paginator:type_name -> paginator.PaginatorReply
	42, // 12: api.bff_admin.v1.SysJobInfoReply.info:type_name -> api.bff_admin.v1.SysJobInfo
	50, // 13: api.bff_admin.v1.SysLogListResp.list:type_name -> api.bff_admin.v1.SysLogInfo
	77, // 14: api.bff_admin.v1.SysLogListResp.paginator:type_name -> paginator.PaginatorReply
	50, // 15: api.bff_admin.v1.SysLogInfoResp.info:type_name -> api.bff_admin.v1.SysLogInfo
	50, // 16: api.bff_admin.v1.SysLogStoreResp.info:type_name -> api.bff_admin.v1.SysLogInfo
	57, // 17: api.bff_admin.v1.SysPermissionInfo.children:type_name -> api.bff_admin.v1.SysPermissionInfo
	57, // 18: api.bff_admin.v1.SysPermissionListResp.list:type_name -> api.bff_admin.v1.SysPermissionInfo
	57, // 19: api.bff_admin.v1.SysPermissionInfoResp.info:type_name -> api.bff_admin.v1.SysPermissionInfo
	68, // 20: api.bff_admin.v1.SysRoleInfo.children:type_name -> api.bff_admin.v1.SysRoleInfo
	68, // 21: api.bff_admin.v1.SysRoleListResp.list:type_name -> api.bff_admin.v1.SysRoleInfo
	68, // 22: api.bff_admin.v1.SysRoleInfoResp.info:type_name -> api.bff_admin.v1.SysRoleInfo
	0,  // 23: api.bff_admin.v1.Sys.DashboardSpeech:input_type -> api.bff_admin.v1.DashboardSpeechReq
	2,  // 24: api.bff_admin.v1.Sys.SysAuthLoginCaptcha:input_type -> api.bff_admin.v1.SysAuthLoginCaptchaReq
	4,  // 25: api.bff_admin.v1.Sys.SysAuthLogin:input_type -> api.bff_admin.v1.SysAuthLoginReq
	6,  // 26: api.bff_admin.v1.Sys.SysAuthLogout:input_type -> api.bff_admin.v1.SysAuthLogoutReq
	9,  // 27: api.bff_admin.v1.Sys.SysAdminInfo:input_type -> api.bff_admin.v1.SysAdminInfoReq
	11, // 28: api.bff_admin.v1.Sys.SysAdminInfoUpdate:input_type -> api.bff_admin.v1.SysAdminInfoUpdateReq
	13, // 29: api.bff_admin.v1.Sys.SysAdminGenerateAvatar:input_type -> api.bff_admin.v1.SysAdminGenerateAvatarReq
	17, // 30: api.bff_admin.v1.Sys.SysAdminPermission:input_type -> api.bff_admin.v1.SysAdminPermissionReq
	78, // 31: api.bff_admin.v1.Sys.SysManageList:input_type -> paginator.PaginatorReq
	20, // 32: api.bff_admin.v1.Sys.SysManageInfo:input_type -> api.bff_admin.v1.SysManageInfoReq
	22, // 33: api.bff_admin.v1.Sys.SysManageStore:input_type -> api.bff_admin.v1.SysManageStoreReq
	24, // 34: api.bff_admin.v1.Sys.SysManageDel:input_type -> api.bff_admin.v1.SysManageDelReq
	27, // 35: api.bff_admin.v1.Sys.SysAPIList:input_type -> api.bff_admin.v1.SysAPIListReq
	29, // 36: api.bff_admin.v1.Sys.SysAPIStore:input_type -> api.bff_admin.v1.SysAPIStoreReq
	31, // 37: api.bff_admin.v1.Sys.SysAPIDel:input_type -> api.bff_admin.v1.SysAPIDelReq
	34, // 38: api.bff_admin.v1.Sys.SysDeptList:input_type -> api.bff_admin.v1.SysDeptListReq
	36, // 39: api.bff_admin.v1.Sys.SysDeptInfo:input_type -> api.bff_admin.v1.SysDeptInfoReq
	38, // 40: api.bff_admin.v1.Sys.SysDeptStore:input_type -> api.bff_admin.v1.SysDeptStoreReq
	40, // 41: api.bff_admin.v1.Sys.SysDeptDel:input_type -> api.bff_admin.v1.SysDeptDelReq
	78, // 42: api.bff_admin.v1.Sys.SysJobList:input_type -> paginator.PaginatorReq
	44, // 43: api.bff_admin.v1.Sys.SysJobInfo:input_type -> api.bff_admin.v1.SysJobInfoReq
	46, // 44: api.bff_admin.v1.Sys.SysJobStore:input_type -> api.bff_admin.v1.SysJobStoreReq
	48, // 45: api.bff_admin.v1.Sys.SysJobDel:input_type -> api.bff_admin.v1.SysJobDelReq
	78, // 46: api.bff_admin.v1.Sys.SysLogList:input_type -> paginator.PaginatorReq
	53, // 47: api.bff_admin.v1.Sys.SysLogInfo:input_type -> api.bff_admin.v1.SysLogInfoReq
	55, // 48: api.bff_admin.v1.Sys.SysLogStore:input_type -> api.bff_admin.v1.SysLogStoreReq
	58, // 49: api.bff_admin.v1.Sys.SysPermissionList:input_type -> api.bff_admin.v1.SysPermissionListReq
	60, // 50: api.bff_admin.v1.Sys.SysPermissionInfo:input_type -> api.bff_admin.v1.SysPermissionInfoReq
	62, // 51: api.bff_admin.v1.Sys.SysPermissionStore:input_type -> api.bff_admin.v1.SysPermissionStoreReq
	64, // 52: api.bff_admin.v1.Sys.SysPermissionDel:input_type -> api.bff_admin.v1.SysPermissionDelReq
	66, // 53: api.bff_admin.v1.Sys.SysPermissionStatus:input_type -> api.bff_admin.v1.SysPermissionStatusReq
	69, // 54: api.bff_admin.v1.Sys.SysRoleList:input_type -> api.bff_admin.v1.SysRoleListReq
	71, // 55: api.bff_admin.v1.Sys.SysRoleInfo:input_type -> api.bff_admin.v1.SysRoleInfoReq
	73, // 56: api.bff_admin.v1.Sys.SysRoleStore:input_type -> api.bff_admin.v1.SysRoleStoreReq
	75, // 57: api.bff_admin.v1.Sys.SysRoleDel:input_type -> api.bff_admin.v1.SysRoleDelReq
	1,  // 58: api.bff_admin.v1.Sys.DashboardSpeech:output_type -> api.bff_admin.v1.DashboardSpeechReply
	3,  // 59: api.bff_admin.v1.Sys.SysAuthLoginCaptcha:output_type -> api.bff_admin.v1.SysAuthLoginCaptchaReply
	5,  // 60: api.bff_admin.v1.Sys.SysAuthLogin:output_type -> api.bff_admin.v1.SysAuthLoginReply
	7,  // 61: api.bff_admin.v1.Sys.SysAuthLogout:output_type -> api.bff_admin.v1.SysAuthLogoutReply
	10, // 62: api.bff_admin.v1.Sys.SysAdminInfo:output_type -> api.bff_admin.v1.SysAdminInfoReply
	12, // 63: api.bff_admin.v1.Sys.SysAdminInfoUpdate:output_type -> api.bff_admin.v1.SysAdminInfoUpdateReply
	14, // 64: api.bff_admin.v1.Sys.SysAdminGenerateAvatar:output_type -> api.bff_admin.v1.SysAdminGenerateAvatarReply
	18, // 65: api.bff_admin.v1.Sys.SysAdminPermission:output_type -> api.bff_admin.v1.SysAdminPermissionReply
	19, // 66: api.bff_admin.v1.Sys.SysManageList:output_type -> api.bff_admin.v1.SysManageListReply
	21, // 67: api.bff_admin.v1.Sys.SysManageInfo:output_type -> api.bff_admin.v1.SysManageInfoReply
	23, // 68: api.bff_admin.v1.Sys.SysManageStore:output_type -> api.bff_admin.v1.SysManageStoreReply
	25, // 69: api.bff_admin.v1.Sys.SysManageDel:output_type -> api.bff_admin.v1.SysManageDelReply
	28, // 70: api.bff_admin.v1.Sys.SysAPIList:output_type -> api.bff_admin.v1.SysAPIListReply
	30, // 71: api.bff_admin.v1.Sys.SysAPIStore:output_type -> api.bff_admin.v1.SysAPIStoreReply
	32, // 72: api.bff_admin.v1.Sys.SysAPIDel:output_type -> api.bff_admin.v1.SysAPIDelReply
	35, // 73: api.bff_admin.v1.Sys.SysDeptList:output_type -> api.bff_admin.v1.SysDeptListReply
	37, // 74: api.bff_admin.v1.Sys.SysDeptInfo:output_type -> api.bff_admin.v1.SysDeptInfoReply
	39, // 75: api.bff_admin.v1.Sys.SysDeptStore:output_type -> api.bff_admin.v1.SysDeptStoreReply
	41, // 76: api.bff_admin.v1.Sys.SysDeptDel:output_type -> api.bff_admin.v1.SysDeptDelReply
	43, // 77: api.bff_admin.v1.Sys.SysJobList:output_type -> api.bff_admin.v1.SysJobListReply
	45, // 78: api.bff_admin.v1.Sys.SysJobInfo:output_type -> api.bff_admin.v1.SysJobInfoReply
	47, // 79: api.bff_admin.v1.Sys.SysJobStore:output_type -> api.bff_admin.v1.SysJobStoreReply
	49, // 80: api.bff_admin.v1.Sys.SysJobDel:output_type -> api.bff_admin.v1.SysJobDelReply
	52, // 81: api.bff_admin.v1.Sys.SysLogList:output_type -> api.bff_admin.v1.SysLogListResp
	54, // 82: api.bff_admin.v1.Sys.SysLogInfo:output_type -> api.bff_admin.v1.SysLogInfoResp
	56, // 83: api.bff_admin.v1.Sys.SysLogStore:output_type -> api.bff_admin.v1.SysLogStoreResp
	59, // 84: api.bff_admin.v1.Sys.SysPermissionList:output_type -> api.bff_admin.v1.SysPermissionListResp
	61, // 85: api.bff_admin.v1.Sys.SysPermissionInfo:output_type -> api.bff_admin.v1.SysPermissionInfoResp
	63, // 86: api.bff_admin.v1.Sys.SysPermissionStore:output_type -> api.bff_admin.v1.SysPermissionStoreResp
	65, // 87: api.bff_admin.v1.Sys.SysPermissionDel:output_type -> api.bff_admin.v1.SysPermissionDelResp
	67, // 88: api.bff_admin.v1.Sys.SysPermissionStatus:output_type -> api.bff_admin.v1.SysPermissionStatusResp
	70, // 89: api.bff_admin.v1.Sys.SysRoleList:output_type -> api.bff_admin.v1.SysRoleListResp
	72, // 90: api.bff_admin.v1.Sys.SysRoleInfo:output_type -> api.bff_admin.v1.SysRoleInfoResp
	74, // 91: api.bff_admin.v1.Sys.SysRoleStore:output_type -> api.bff_admin.v1.SysRoleStoreResp
	76, // 92: api.bff_admin.v1.Sys.SysRoleDel:output_type -> api.bff_admin.v1.SysRoleDelResp
	58, // [58:93] is the sub-list for method output_type
	23, // [23:58] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_bff_admin_v1_sys_proto_init() }
func file_bff_admin_v1_sys_proto_init() {
	if File_bff_admin_v1_sys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bff_admin_v1_sys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardSpeechReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardSpeechReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAuthLoginCaptchaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAuthLoginCaptchaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAuthLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAuthLoginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAuthLogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAuthLogoutReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminInfoUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminInfoUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminGenerateAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminGenerateAvatarReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminPermissionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageStoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageStoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageDelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAPIInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAPIListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAPIListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAPIStoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAPIStoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAPIDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAPIDelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDeptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDeptListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDeptListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDeptInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDeptInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDeptStoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDeptStoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDeptDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDeptDelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobStoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobStoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobDelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogStoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogStoreResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysPermissionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysPermissionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysPermissionListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysPermissionInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysPermissionInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysPermissionStoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysPermissionStoreResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysPermissionDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysPermissionDelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysPermissionStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysPermissionStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleStoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleStoreResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_admin_v1_sys_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleDelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bff_admin_v1_sys_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   77,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bff_admin_v1_sys_proto_goTypes,
		DependencyIndexes: file_bff_admin_v1_sys_proto_depIdxs,
		MessageInfos:      file_bff_admin_v1_sys_proto_msgTypes,
	}.Build()
	File_bff_admin_v1_sys_proto = out.File
	file_bff_admin_v1_sys_proto_rawDesc = nil
	file_bff_admin_v1_sys_proto_goTypes = nil
	file_bff_admin_v1_sys_proto_depIdxs = nil
}
