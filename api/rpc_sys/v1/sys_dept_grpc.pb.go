// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: rpc_sys/v1/sys_dept.proto

package v1

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const ()

// DeptClient is the client API for Dept service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DeptClient interface {
}

type deptClient struct {
	cc grpc.ClientConnInterface
}

func NewDeptClient(cc grpc.ClientConnInterface) DeptClient {
	return &deptClient{cc}
}

// DeptServer is the server API for Dept service.
// All implementations must embed UnimplementedDeptServer
// for forward compatibility
type DeptServer interface {
	mustEmbedUnimplementedDeptServer()
}

// UnimplementedDeptServer must be embedded to have forward compatible implementations.
type UnimplementedDeptServer struct {
}

func (UnimplementedDeptServer) mustEmbedUnimplementedDeptServer() {}

// UnsafeDeptServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DeptServer will
// result in compilation errors.
type UnsafeDeptServer interface {
	mustEmbedUnimplementedDeptServer()
}

func RegisterDeptServer(s grpc.ServiceRegistrar, srv DeptServer) {
	s.RegisterService(&Dept_ServiceDesc, srv)
}

// Dept_ServiceDesc is the grpc.ServiceDesc for Dept service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Dept_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.user.v1.Dept",
	HandlerType: (*DeptServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "rpc_sys/v1/sys_dept.proto",
}
