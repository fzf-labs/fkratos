// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.4
// source: rpc_sys/v1/sys_admin.proto

package v1

import (
	paginator "fkratos/api/paginator"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SysAdminInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`             // ID
	Username string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` // 账号
	Nickname string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"` // 昵称
	Avatar   string   `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`     // 头像
	Gender   int32    `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`    // 0=保密 1=女 2=男
	Email    string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`       // 邮件
	Mobile   string   `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile,omitempty"`     // 手机号
	JobID    string   `protobuf:"bytes,8,opt,name=jobID,proto3" json:"jobID,omitempty"`       // 岗位
	DeptID   string   `protobuf:"bytes,9,opt,name=deptID,proto3" json:"deptID,omitempty"`     // 部门
	RoleIds  []string `protobuf:"bytes,10,rep,name=roleIds,proto3" json:"roleIds,omitempty"`  // 角色集
	Motto    string   `protobuf:"bytes,11,opt,name=motto,proto3" json:"motto,omitempty"`      // 个性签名
}

func (x *SysAdminInfo) Reset() {
	*x = SysAdminInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminInfo) ProtoMessage() {}

func (x *SysAdminInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminInfo.ProtoReflect.Descriptor instead.
func (*SysAdminInfo) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{0}
}

func (x *SysAdminInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysAdminInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysAdminInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SysAdminInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysAdminInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SysAdminInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysAdminInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SysAdminInfo) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *SysAdminInfo) GetDeptID() string {
	if x != nil {
		return x.DeptID
	}
	return ""
}

func (x *SysAdminInfo) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *SysAdminInfo) GetMotto() string {
	if x != nil {
		return x.Motto
	}
	return ""
}

// 请求-管理员信息
type SysAdminInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId string `protobuf:"bytes,1,opt,name=adminId,proto3" json:"adminId,omitempty"` //ID
}

func (x *SysAdminInfoReq) Reset() {
	*x = SysAdminInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminInfoReq) ProtoMessage() {}

func (x *SysAdminInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminInfoReq.ProtoReflect.Descriptor instead.
func (*SysAdminInfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{1}
}

func (x *SysAdminInfoReq) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

// 响应-管理员信息
type SysAdminInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SysAdminInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SysAdminInfoReply) Reset() {
	*x = SysAdminInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminInfoReply) ProtoMessage() {}

func (x *SysAdminInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminInfoReply.ProtoReflect.Descriptor instead.
func (*SysAdminInfoReply) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{2}
}

func (x *SysAdminInfoReply) GetInfo() *SysAdminInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 请求-管理员更新
type SysAdminInfoUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId  string `protobuf:"bytes,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` //昵称
	Email    string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`       //邮件
	Mobile   string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`     //手机号
	Motto    string `protobuf:"bytes,5,opt,name=motto,proto3" json:"motto,omitempty"`       //个性签名
	Password string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"` //密码
}

func (x *SysAdminInfoUpdateReq) Reset() {
	*x = SysAdminInfoUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminInfoUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminInfoUpdateReq) ProtoMessage() {}

func (x *SysAdminInfoUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminInfoUpdateReq.ProtoReflect.Descriptor instead.
func (*SysAdminInfoUpdateReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{3}
}

func (x *SysAdminInfoUpdateReq) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

func (x *SysAdminInfoUpdateReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SysAdminInfoUpdateReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysAdminInfoUpdateReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SysAdminInfoUpdateReq) GetMotto() string {
	if x != nil {
		return x.Motto
	}
	return ""
}

func (x *SysAdminInfoUpdateReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 响应-管理员更新
type SysAdminInfoUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysAdminInfoUpdateReply) Reset() {
	*x = SysAdminInfoUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminInfoUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminInfoUpdateReply) ProtoMessage() {}

func (x *SysAdminInfoUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminInfoUpdateReply.ProtoReflect.Descriptor instead.
func (*SysAdminInfoUpdateReply) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{4}
}

// 请求-生成头像
type SysAdminGenerateAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId string `protobuf:"bytes,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *SysAdminGenerateAvatarReq) Reset() {
	*x = SysAdminGenerateAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminGenerateAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminGenerateAvatarReq) ProtoMessage() {}

func (x *SysAdminGenerateAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminGenerateAvatarReq.ProtoReflect.Descriptor instead.
func (*SysAdminGenerateAvatarReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{5}
}

func (x *SysAdminGenerateAvatarReq) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

// 响应-生成头像
type SysAdminGenerateAvatarReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarUrl string `protobuf:"bytes,1,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"` //头像地址
}

func (x *SysAdminGenerateAvatarReply) Reset() {
	*x = SysAdminGenerateAvatarReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminGenerateAvatarReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminGenerateAvatarReply) ProtoMessage() {}

func (x *SysAdminGenerateAvatarReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminGenerateAvatarReply.ProtoReflect.Descriptor instead.
func (*SysAdminGenerateAvatarReply) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{6}
}

func (x *SysAdminGenerateAvatarReply) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

type SysManageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username  string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`    // 账号
	Nickname  string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`    // 昵称
	Avatar    string   `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`        // 头像
	Gender    int32    `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`       // 0=保密 1=女 2=男
	Email     string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`          // 邮件
	Mobile    string   `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile,omitempty"`        // 手机号
	JobID     string   `protobuf:"bytes,8,opt,name=jobID,proto3" json:"jobID,omitempty"`          // 岗位
	DeptID    string   `protobuf:"bytes,9,opt,name=deptID,proto3" json:"deptID,omitempty"`        // 部门
	RoleIds   []string `protobuf:"bytes,10,rep,name=roleIds,proto3" json:"roleIds,omitempty"`     // 角色集
	JobName   string   `protobuf:"bytes,11,opt,name=jobName,proto3" json:"jobName,omitempty"`     // 岗位
	DeptName  string   `protobuf:"bytes,12,opt,name=deptName,proto3" json:"deptName,omitempty"`   // 部门
	RoleNames []string `protobuf:"bytes,13,rep,name=roleNames,proto3" json:"roleNames,omitempty"` // 角色名称集
	Motto     string   `protobuf:"bytes,14,opt,name=motto,proto3" json:"motto,omitempty"`         // 个性签名
	Status    int32    `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`      //状态
	CreatedAt string   `protobuf:"bytes,16,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //创建时间
	UpdatedAt string   `protobuf:"bytes,17,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //更新时间
}

func (x *SysManageInfo) Reset() {
	*x = SysManageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageInfo) ProtoMessage() {}

func (x *SysManageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageInfo.ProtoReflect.Descriptor instead.
func (*SysManageInfo) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{7}
}

func (x *SysManageInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysManageInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysManageInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SysManageInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysManageInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SysManageInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysManageInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SysManageInfo) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *SysManageInfo) GetDeptID() string {
	if x != nil {
		return x.DeptID
	}
	return ""
}

func (x *SysManageInfo) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *SysManageInfo) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *SysManageInfo) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *SysManageInfo) GetRoleNames() []string {
	if x != nil {
		return x.RoleNames
	}
	return nil
}

func (x *SysManageInfo) GetMotto() string {
	if x != nil {
		return x.Motto
	}
	return ""
}

func (x *SysManageInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysManageInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SysManageInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type SysAdminPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string                `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`                // ID
	Pid       string                `protobuf:"bytes,2,opt,name=Pid,proto3" json:"Pid,omitempty"`              // 上级菜单
	Type      string                `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`            // 类型:menu_dir=菜单目录,menu=菜单项,button=页面按钮
	Title     string                `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`          // 标题
	Name      string                `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`            // 规则名称
	Path      string                `protobuf:"bytes,6,opt,name=Path,proto3" json:"Path,omitempty"`            // 路由路径
	Icon      string                `protobuf:"bytes,7,opt,name=Icon,proto3" json:"Icon,omitempty"`            // 图标
	MenuType  string                `protobuf:"bytes,8,opt,name=MenuType,proto3" json:"MenuType,omitempty"`    // 菜单类型:tab=选项卡,link=链接,iframe=Iframe
	URL       string                `protobuf:"bytes,9,opt,name=URL,proto3" json:"URL,omitempty"`              // Url
	Component string                `protobuf:"bytes,10,opt,name=Component,proto3" json:"Component,omitempty"` // 组件路径
	Extend    string                `protobuf:"bytes,11,opt,name=Extend,proto3" json:"Extend,omitempty"`       // 扩展属性:none=无,add_rules_only=只添加为路由,add_menu_only=只添加为菜单
	Children  []*SysAdminPermission `protobuf:"bytes,12,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *SysAdminPermission) Reset() {
	*x = SysAdminPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminPermission) ProtoMessage() {}

func (x *SysAdminPermission) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminPermission.ProtoReflect.Descriptor instead.
func (*SysAdminPermission) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{8}
}

func (x *SysAdminPermission) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SysAdminPermission) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *SysAdminPermission) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SysAdminPermission) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SysAdminPermission) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysAdminPermission) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysAdminPermission) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysAdminPermission) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *SysAdminPermission) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *SysAdminPermission) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysAdminPermission) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *SysAdminPermission) GetChildren() []*SysAdminPermission {
	if x != nil {
		return x.Children
	}
	return nil
}

type SysAdminPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId string `protobuf:"bytes,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *SysAdminPermissionReq) Reset() {
	*x = SysAdminPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminPermissionReq) ProtoMessage() {}

func (x *SysAdminPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminPermissionReq.ProtoReflect.Descriptor instead.
func (*SysAdminPermissionReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{9}
}

func (x *SysAdminPermissionReq) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

type SysAdminPermissionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SysAdminPermission `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SysAdminPermissionReply) Reset() {
	*x = SysAdminPermissionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAdminPermissionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAdminPermissionReply) ProtoMessage() {}

func (x *SysAdminPermissionReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAdminPermissionReply.ProtoReflect.Descriptor instead.
func (*SysAdminPermissionReply) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{10}
}

func (x *SysAdminPermissionReply) GetList() []*SysAdminPermission {
	if x != nil {
		return x.List
	}
	return nil
}

// 响应-管理员列表
type SysManageListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List      []*SysManageInfo          `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`           //管理员列表
	Paginator *paginator.PaginatorReply `protobuf:"bytes,2,opt,name=paginator,proto3" json:"paginator,omitempty"` //分页
}

func (x *SysManageListReply) Reset() {
	*x = SysManageListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageListReply) ProtoMessage() {}

func (x *SysManageListReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageListReply.ProtoReflect.Descriptor instead.
func (*SysManageListReply) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{11}
}

func (x *SysManageListReply) GetList() []*SysManageInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SysManageListReply) GetPaginator() *paginator.PaginatorReply {
	if x != nil {
		return x.Paginator
	}
	return nil
}

// 请求-管理员信息
type SysManageInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId string `protobuf:"bytes,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *SysManageInfoReq) Reset() {
	*x = SysManageInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageInfoReq) ProtoMessage() {}

func (x *SysManageInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageInfoReq.ProtoReflect.Descriptor instead.
func (*SysManageInfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{12}
}

func (x *SysManageInfoReq) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

// 响应-管理员信息
type SysManageInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SysManageInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SysManageInfoReply) Reset() {
	*x = SysManageInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageInfoReply) ProtoMessage() {}

func (x *SysManageInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageInfoReply.ProtoReflect.Descriptor instead.
func (*SysManageInfoReply) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{13}
}

func (x *SysManageInfoReply) GetInfo() *SysManageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 请求-管理员保存
type SysManageStoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` // 账号
	Nickname string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"` // 昵称
	Password string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"` // 昵称
	Avatar   string   `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`     // 头像
	Gender   int32    `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`    // 0=保密 1=女 2=男
	Email    string   `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`       // 邮件
	Mobile   string   `protobuf:"bytes,8,opt,name=mobile,proto3" json:"mobile,omitempty"`     // 手机号
	JobID    string   `protobuf:"bytes,9,opt,name=jobID,proto3" json:"jobID,omitempty"`       // 岗位
	DeptID   string   `protobuf:"bytes,10,opt,name=deptID,proto3" json:"deptID,omitempty"`    // 部门
	RoleIds  []string `protobuf:"bytes,11,rep,name=roleIds,proto3" json:"roleIds,omitempty"`  // 角色集
	Motto    string   `protobuf:"bytes,12,opt,name=motto,proto3" json:"motto,omitempty"`      // 个性签名
	Status   int32    `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`   //状态
}

func (x *SysManageStoreReq) Reset() {
	*x = SysManageStoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageStoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageStoreReq) ProtoMessage() {}

func (x *SysManageStoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageStoreReq.ProtoReflect.Descriptor instead.
func (*SysManageStoreReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{14}
}

func (x *SysManageStoreReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysManageStoreReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysManageStoreReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SysManageStoreReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SysManageStoreReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysManageStoreReq) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SysManageStoreReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysManageStoreReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SysManageStoreReq) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *SysManageStoreReq) GetDeptID() string {
	if x != nil {
		return x.DeptID
	}
	return ""
}

func (x *SysManageStoreReq) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *SysManageStoreReq) GetMotto() string {
	if x != nil {
		return x.Motto
	}
	return ""
}

func (x *SysManageStoreReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 响应-管理员保存
type SysManageStoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysManageStoreReply) Reset() {
	*x = SysManageStoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageStoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageStoreReply) ProtoMessage() {}

func (x *SysManageStoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageStoreReply.ProtoReflect.Descriptor instead.
func (*SysManageStoreReply) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{15}
}

// 请求-管理员删除
type SysManageDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SysManageDelReq) Reset() {
	*x = SysManageDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageDelReq) ProtoMessage() {}

func (x *SysManageDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageDelReq.ProtoReflect.Descriptor instead.
func (*SysManageDelReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{16}
}

func (x *SysManageDelReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 响应-管理员删除
type SysManageDelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysManageDelReply) Reset() {
	*x = SysManageDelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysManageDelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysManageDelReply) ProtoMessage() {}

func (x *SysManageDelReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_v1_sys_admin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysManageDelReply.ProtoReflect.Descriptor instead.
func (*SysManageDelReply) Descriptor() ([]byte, []int) {
	return file_rpc_sys_v1_sys_admin_proto_rawDescGZIP(), []int{17}
}

var File_rpc_sys_v1_sys_admin_proto protoreflect.FileDescriptor

var file_rpc_sys_v1_sys_admin_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x92, 0x02, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x65, 0x70, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0xb0, 0x01, 0x01, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x11,
	0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0xf0, 0x01, 0x0a, 0x15, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a,
	0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x00, 0x18, 0x32, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x00,
	0x18, 0x32, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x00, 0x18, 0x0f, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x05,
	0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x00, 0x18, 0xff, 0x01, 0x52, 0x05, 0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x12, 0x26,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x00, 0x18, 0x80, 0x01, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x3f, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x22,
	0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x49, 0x64, 0x22, 0x3b, 0x0a, 0x1b, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x22,
	0xbb, 0x03, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x65, 0x70, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x70,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc0, 0x02,
	0x0a, 0x12, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x50, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x12, 0x3e, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x22, 0x3b, 0x0a, 0x15, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72,
	0x03, 0xb0, 0x01, 0x01, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x51, 0x0a,
	0x17, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63,
	0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x80, 0x01, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x22, 0x36, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x12, 0x53,
	0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0xcb, 0x02, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x0a, 0x0f, 0x53, 0x79, 0x73,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x13,
	0x0a, 0x11, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x32, 0xec, 0x05, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x52, 0x0a,
	0x0c, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x64, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70,
	0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x27,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x70, 0x0a, 0x16, 0x53, 0x79, 0x73, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x64, 0x0a, 0x12, 0x53, 0x79, 0x73,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63,
	0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x4c, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x17, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x55, 0x0a,
	0x0d, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x58, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63,
	0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x52,
	0x0a, 0x0c, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x12, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x42, 0x1b, 0x5a, 0x19, 0x66, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_sys_v1_sys_admin_proto_rawDescOnce sync.Once
	file_rpc_sys_v1_sys_admin_proto_rawDescData = file_rpc_sys_v1_sys_admin_proto_rawDesc
)

func file_rpc_sys_v1_sys_admin_proto_rawDescGZIP() []byte {
	file_rpc_sys_v1_sys_admin_proto_rawDescOnce.Do(func() {
		file_rpc_sys_v1_sys_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_sys_v1_sys_admin_proto_rawDescData)
	})
	return file_rpc_sys_v1_sys_admin_proto_rawDescData
}

var file_rpc_sys_v1_sys_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_rpc_sys_v1_sys_admin_proto_goTypes = []interface{}{
	(*SysAdminInfo)(nil),                // 0: api.rpc_sys.v1.SysAdminInfo
	(*SysAdminInfoReq)(nil),             // 1: api.rpc_sys.v1.SysAdminInfoReq
	(*SysAdminInfoReply)(nil),           // 2: api.rpc_sys.v1.SysAdminInfoReply
	(*SysAdminInfoUpdateReq)(nil),       // 3: api.rpc_sys.v1.SysAdminInfoUpdateReq
	(*SysAdminInfoUpdateReply)(nil),     // 4: api.rpc_sys.v1.SysAdminInfoUpdateReply
	(*SysAdminGenerateAvatarReq)(nil),   // 5: api.rpc_sys.v1.SysAdminGenerateAvatarReq
	(*SysAdminGenerateAvatarReply)(nil), // 6: api.rpc_sys.v1.SysAdminGenerateAvatarReply
	(*SysManageInfo)(nil),               // 7: api.rpc_sys.v1.SysManageInfo
	(*SysAdminPermission)(nil),          // 8: api.rpc_sys.v1.SysAdminPermission
	(*SysAdminPermissionReq)(nil),       // 9: api.rpc_sys.v1.SysAdminPermissionReq
	(*SysAdminPermissionReply)(nil),     // 10: api.rpc_sys.v1.SysAdminPermissionReply
	(*SysManageListReply)(nil),          // 11: api.rpc_sys.v1.SysManageListReply
	(*SysManageInfoReq)(nil),            // 12: api.rpc_sys.v1.SysManageInfoReq
	(*SysManageInfoReply)(nil),          // 13: api.rpc_sys.v1.SysManageInfoReply
	(*SysManageStoreReq)(nil),           // 14: api.rpc_sys.v1.SysManageStoreReq
	(*SysManageStoreReply)(nil),         // 15: api.rpc_sys.v1.SysManageStoreReply
	(*SysManageDelReq)(nil),             // 16: api.rpc_sys.v1.SysManageDelReq
	(*SysManageDelReply)(nil),           // 17: api.rpc_sys.v1.SysManageDelReply
	(*paginator.PaginatorReply)(nil),    // 18: paginator.PaginatorReply
	(*paginator.PaginatorReq)(nil),      // 19: paginator.PaginatorReq
}
var file_rpc_sys_v1_sys_admin_proto_depIdxs = []int32{
	0,  // 0: api.rpc_sys.v1.SysAdminInfoReply.info:type_name -> api.rpc_sys.v1.SysAdminInfo
	8,  // 1: api.rpc_sys.v1.SysAdminPermission.children:type_name -> api.rpc_sys.v1.SysAdminPermission
	8,  // 2: api.rpc_sys.v1.SysAdminPermissionReply.list:type_name -> api.rpc_sys.v1.SysAdminPermission
	7,  // 3: api.rpc_sys.v1.SysManageListReply.list:type_name -> api.rpc_sys.v1.SysManageInfo
	18, // 4: api.rpc_sys.v1.SysManageListReply.paginator:type_name -> paginator.PaginatorReply
	7,  // 5: api.rpc_sys.v1.SysManageInfoReply.info:type_name -> api.rpc_sys.v1.SysManageInfo
	1,  // 6: api.rpc_sys.v1.Admin.SysAdminInfo:input_type -> api.rpc_sys.v1.SysAdminInfoReq
	3,  // 7: api.rpc_sys.v1.Admin.SysAdminInfoUpdate:input_type -> api.rpc_sys.v1.SysAdminInfoUpdateReq
	5,  // 8: api.rpc_sys.v1.Admin.SysAdminGenerateAvatar:input_type -> api.rpc_sys.v1.SysAdminGenerateAvatarReq
	9,  // 9: api.rpc_sys.v1.Admin.SysAdminPermission:input_type -> api.rpc_sys.v1.SysAdminPermissionReq
	19, // 10: api.rpc_sys.v1.Admin.SysManageList:input_type -> paginator.PaginatorReq
	12, // 11: api.rpc_sys.v1.Admin.SysManageInfo:input_type -> api.rpc_sys.v1.SysManageInfoReq
	14, // 12: api.rpc_sys.v1.Admin.SysManageStore:input_type -> api.rpc_sys.v1.SysManageStoreReq
	16, // 13: api.rpc_sys.v1.Admin.SysManageDel:input_type -> api.rpc_sys.v1.SysManageDelReq
	2,  // 14: api.rpc_sys.v1.Admin.SysAdminInfo:output_type -> api.rpc_sys.v1.SysAdminInfoReply
	4,  // 15: api.rpc_sys.v1.Admin.SysAdminInfoUpdate:output_type -> api.rpc_sys.v1.SysAdminInfoUpdateReply
	6,  // 16: api.rpc_sys.v1.Admin.SysAdminGenerateAvatar:output_type -> api.rpc_sys.v1.SysAdminGenerateAvatarReply
	10, // 17: api.rpc_sys.v1.Admin.SysAdminPermission:output_type -> api.rpc_sys.v1.SysAdminPermissionReply
	11, // 18: api.rpc_sys.v1.Admin.SysManageList:output_type -> api.rpc_sys.v1.SysManageListReply
	13, // 19: api.rpc_sys.v1.Admin.SysManageInfo:output_type -> api.rpc_sys.v1.SysManageInfoReply
	15, // 20: api.rpc_sys.v1.Admin.SysManageStore:output_type -> api.rpc_sys.v1.SysManageStoreReply
	17, // 21: api.rpc_sys.v1.Admin.SysManageDel:output_type -> api.rpc_sys.v1.SysManageDelReply
	14, // [14:22] is the sub-list for method output_type
	6,  // [6:14] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_rpc_sys_v1_sys_admin_proto_init() }
func file_rpc_sys_v1_sys_admin_proto_init() {
	if File_rpc_sys_v1_sys_admin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_sys_v1_sys_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminInfoUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminInfoUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminGenerateAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminGenerateAvatarReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAdminPermissionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageStoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageStoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_v1_sys_admin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysManageDelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_sys_v1_sys_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_sys_v1_sys_admin_proto_goTypes,
		DependencyIndexes: file_rpc_sys_v1_sys_admin_proto_depIdxs,
		MessageInfos:      file_rpc_sys_v1_sys_admin_proto_msgTypes,
	}.Build()
	File_rpc_sys_v1_sys_admin_proto = out.File
	file_rpc_sys_v1_sys_admin_proto_rawDesc = nil
	file_rpc_sys_v1_sys_admin_proto_goTypes = nil
	file_rpc_sys_v1_sys_admin_proto_depIdxs = nil
}
